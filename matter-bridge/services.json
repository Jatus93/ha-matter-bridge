{
    "persistent_notification": {
        "create": {
            "name": "Create",
            "description": "Shows a notification on the **Notifications** panel.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "Please check your configuration.yaml.",
                    "selector": { "text": null },
                    "name": "Message",
                    "description": "Message body of the notification."
                },
                "title": {
                    "example": "Test notification",
                    "selector": { "text": null },
                    "name": "Title",
                    "description": "Optional title of the notification."
                },
                "notification_id": {
                    "example": 1234,
                    "selector": { "text": null },
                    "name": "Notification ID",
                    "description": "ID of the notification. This new notification will overwrite an existing notification with the same ID."
                }
            }
        },
        "dismiss": {
            "name": "Dismiss",
            "description": "Removes a notification from the **Notifications** panel.",
            "fields": {
                "notification_id": {
                    "required": true,
                    "example": 1234,
                    "selector": { "text": null },
                    "name": "Notification ID",
                    "description": "ID of the notification to be removed."
                }
            }
        },
        "dismiss_all": {
            "name": "Dismiss all",
            "description": "Removes all notifications from the **Notifications** panel.",
            "fields": {}
        }
    },
    "homeassistant": {
        "save_persistent_states": {
            "name": "Save persistent states",
            "description": "Saves the persistent states immediately. Maintains the normal periodic saving interval.",
            "fields": {}
        },
        "turn_off": {
            "name": "Generic turn off",
            "description": "Generic service to turn devices off under any domain.",
            "fields": {},
            "target": { "entity": [{}] }
        },
        "turn_on": {
            "name": "Generic turn on",
            "description": "Generic service to turn devices on under any domain.",
            "fields": {},
            "target": { "entity": [{}] }
        },
        "toggle": {
            "name": "Generic toggle",
            "description": "Generic service to toggle devices on/off under any domain.",
            "fields": {},
            "target": { "entity": [{}] }
        },
        "stop": {
            "name": "Stop",
            "description": "Stops Home Assistant.",
            "fields": {}
        },
        "restart": {
            "name": "Restart",
            "description": "Restarts Home Assistant.",
            "fields": {}
        },
        "check_config": {
            "name": "Check configuration",
            "description": "Checks the Home Assistant YAML-configuration files for errors. Errors will be shown in the Home Assistant logs.",
            "fields": {}
        },
        "update_entity": {
            "name": "Update entity",
            "description": "Forces one or more entities to update its data.",
            "fields": {},
            "target": { "entity": [{}] }
        },
        "reload_core_config": {
            "name": "Reload core configuration",
            "description": "Reloads the core configuration from the YAML-configuration.",
            "fields": {}
        },
        "set_location": {
            "name": "Set location",
            "description": "Updates the Home Assistant location.",
            "fields": {
                "latitude": {
                    "required": true,
                    "example": 32.87336,
                    "selector": {
                        "number": {
                            "mode": "box",
                            "min": -90,
                            "max": 90,
                            "step": "any"
                        }
                    },
                    "name": "Latitude",
                    "description": "Latitude of your location."
                },
                "longitude": {
                    "required": true,
                    "example": 117.22743,
                    "selector": {
                        "number": {
                            "mode": "box",
                            "min": -180,
                            "max": 180,
                            "step": "any"
                        }
                    },
                    "name": "Longitude",
                    "description": "Longitude of your location."
                },
                "elevation": {
                    "required": false,
                    "example": 120,
                    "selector": {
                        "number": { "mode": "box", "step": "any" }
                    },
                    "name": "Elevation",
                    "description": "Elevation of your location."
                }
            }
        },
        "reload_custom_templates": {
            "name": "Reload custom Jinja2 templates",
            "description": "Reloads Jinja2 templates found in the `custom_templates` folder in your config. New values will be applied on the next render of the template.",
            "fields": {}
        },
        "reload_config_entry": {
            "name": "Reload config entry",
            "description": "Reloads the specified config entry.",
            "fields": {
                "entry_id": {
                    "advanced": true,
                    "required": false,
                    "example": "8955375327824e14ba89e4b29cc3ec9a",
                    "selector": { "text": null },
                    "name": "Config entry ID",
                    "description": "The configuration entry ID of the entry to be reloaded."
                }
            },
            "target": { "entity": [{}], "device": [{}] }
        },
        "reload_all": {
            "name": "Reload all",
            "description": "Reload all YAML configuration that can be reloaded without restarting Home Assistant.",
            "fields": {}
        }
    },
    "system_log": {
        "clear": {
            "name": "Clear all",
            "description": "Clears all log entries.",
            "fields": {}
        },
        "write": {
            "name": "Write",
            "description": "Write log entry.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "Something went wrong",
                    "selector": { "text": null },
                    "name": "Message",
                    "description": "Message to log."
                },
                "level": {
                    "default": "error",
                    "selector": {
                        "select": {
                            "options": [
                                "debug",
                                "info",
                                "warning",
                                "error",
                                "critical"
                            ],
                            "translation_key": "level"
                        }
                    },
                    "name": "Level",
                    "description": "Log level."
                },
                "logger": {
                    "example": "mycomponent.myplatform",
                    "selector": { "text": null },
                    "name": "Logger",
                    "description": "Logger name under which to log the message. Defaults to `system_log.external`."
                }
            }
        }
    },
    "logger": {
        "set_default_level": {
            "name": "Set default level",
            "description": "Sets the default log level for integrations.",
            "fields": {
                "level": {
                    "selector": {
                        "select": {
                            "options": [
                                "debug",
                                "info",
                                "warning",
                                "error",
                                "fatal",
                                "critical"
                            ],
                            "translation_key": "level"
                        }
                    },
                    "name": "Level",
                    "description": "Default severity level for all integrations."
                }
            }
        },
        "set_level": {
            "name": "Set level",
            "description": "Sets the log level for one or more integrations.",
            "fields": {}
        }
    },
    "recorder": {
        "purge": {
            "name": "Purge",
            "description": "Starts purge task - to clean up old data from your database.",
            "fields": {
                "keep_days": {
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 365,
                            "unit_of_measurement": "days"
                        }
                    },
                    "name": "Days to keep",
                    "description": "Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged."
                },
                "repack": {
                    "default": false,
                    "selector": { "boolean": null },
                    "name": "Repack",
                    "description": "Attempt to save disk space by rewriting the entire database file."
                },
                "apply_filter": {
                    "default": false,
                    "selector": { "boolean": null },
                    "name": "Apply filter",
                    "description": "Apply `entity_id` and `event_type` filters in addition to time-based purge."
                }
            }
        },
        "purge_entities": {
            "name": "Purge entities",
            "description": "Starts a purge task to remove the data related to specific entities from your database.",
            "fields": {
                "entity_id": {
                    "required": false,
                    "selector": { "entity": { "multiple": true } },
                    "name": "Entities to remove",
                    "description": "List of entities for which the data is to be removed from the recorder database."
                },
                "domains": {
                    "example": "sun",
                    "required": false,
                    "selector": { "object": null },
                    "name": "Domains to remove",
                    "description": "List of domains for which the data needs to be removed from the recorder database."
                },
                "entity_globs": {
                    "example": "domain*.object_id*",
                    "required": false,
                    "selector": { "object": null },
                    "name": "Entity globs to remove",
                    "description": "List of glob patterns used to select the entities for which the data is to be removed from the recorder database."
                },
                "keep_days": {
                    "default": 0,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 365,
                            "unit_of_measurement": "days"
                        }
                    },
                    "name": "Days to keep",
                    "description": "Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately."
                }
            }
        },
        "enable": {
            "name": "Enable",
            "description": "Starts the recording of events and state changes.",
            "fields": {}
        },
        "disable": {
            "name": "Disable",
            "description": "Stops the recording of events and state changes.",
            "fields": {}
        }
    },
    "person": {
        "reload": {
            "name": "Reload",
            "description": "Reloads persons from the YAML-configuration.",
            "fields": {}
        }
    },
    "frontend": {
        "set_theme": {
            "name": "Set the default theme",
            "description": "Sets the default theme Home Assistant uses. Can be overridden by a user.",
            "fields": {
                "name": {
                    "required": true,
                    "example": "default",
                    "selector": {
                        "theme": { "include_default": true }
                    },
                    "name": "Theme",
                    "description": "Name of a theme."
                },
                "mode": {
                    "default": "light",
                    "selector": {
                        "select": {
                            "options": ["dark", "light"],
                            "translation_key": "mode"
                        }
                    },
                    "name": "Mode",
                    "description": "Theme mode."
                }
            }
        },
        "reload_themes": {
            "name": "Reload themes",
            "description": "Reloads themes from the YAML-configuration.",
            "fields": {}
        }
    },
    "hassio": {
        "addon_start": {
            "name": "Start add-on",
            "description": "Starts an add-on.",
            "fields": {
                "addon": {
                    "required": true,
                    "example": "core_ssh",
                    "selector": { "addon": null },
                    "name": "Add-on",
                    "description": "The add-on slug."
                }
            }
        },
        "addon_stop": {
            "name": "Stop add-on.",
            "description": "Stops an add-on.",
            "fields": {
                "addon": {
                    "required": true,
                    "example": "core_ssh",
                    "selector": { "addon": null },
                    "name": "Add-on",
                    "description": "The add-on slug."
                }
            }
        },
        "addon_restart": {
            "name": "Restart add-on.",
            "description": "Restarts an add-on.",
            "fields": {
                "addon": {
                    "required": true,
                    "example": "core_ssh",
                    "selector": { "addon": null },
                    "name": "Add-on",
                    "description": "The add-on slug."
                }
            }
        },
        "addon_update": {
            "name": "Update add-on.",
            "description": "Updates an add-on. This service should be used with caution since add-on updates can contain breaking changes. It is highly recommended that you review release notes/change logs before updating an add-on.",
            "fields": {
                "addon": {
                    "required": true,
                    "example": "core_ssh",
                    "selector": { "addon": null },
                    "name": "Add-on",
                    "description": "The add-on slug."
                }
            }
        },
        "addon_stdin": {
            "name": "Write data to add-on stdin.",
            "description": "Writes data to add-on stdin.",
            "fields": {
                "addon": {
                    "required": true,
                    "example": "core_ssh",
                    "selector": { "addon": null },
                    "name": "Add-on",
                    "description": "The add-on slug."
                }
            }
        },
        "host_shutdown": {
            "name": "Power off the host system.",
            "description": "Powers off the host system.",
            "fields": {}
        },
        "host_reboot": {
            "name": "Reboot the host system.",
            "description": "Reboots the host system.",
            "fields": {}
        },
        "backup_full": {
            "name": "Create a full backup.",
            "description": "Creates a full backup.",
            "fields": {
                "name": {
                    "example": "Backup 1",
                    "selector": { "text": null },
                    "name": "Name",
                    "description": "Optional (default = current date and time)."
                },
                "password": {
                    "example": "password",
                    "selector": { "text": null },
                    "name": "Password",
                    "description": "Password to protect the backup with."
                },
                "compressed": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Compressed",
                    "description": "Compresses the backup files."
                },
                "location": {
                    "example": "my_backup_mount",
                    "selector": { "backup_location": null },
                    "name": "Location",
                    "description": "Name of a backup network storage to host backups."
                },
                "homeassistant_exclude_database": {
                    "default": false,
                    "selector": { "boolean": null },
                    "name": "Home Assistant exclude database",
                    "description": "Exclude the Home Assistant database file from backup"
                }
            }
        },
        "backup_partial": {
            "name": "Create a partial backup.",
            "description": "Creates a partial backup.",
            "fields": {
                "homeassistant": {
                    "selector": { "boolean": null },
                    "name": "Home Assistant settings",
                    "description": "Includes Home Assistant settings in the backup."
                },
                "homeassistant_exclude_database": {
                    "default": false,
                    "selector": { "boolean": null },
                    "name": "Home Assistant exclude database",
                    "description": "Exclude the Home Assistant database file from backup"
                },
                "addons": {
                    "example": [
                        "core_ssh",
                        "core_samba",
                        "core_mosquitto"
                    ],
                    "selector": { "object": null },
                    "name": "Add-ons",
                    "description": "List of add-ons to include in the backup. Use the name slug of the add-on."
                },
                "folders": {
                    "example": ["homeassistant", "share"],
                    "selector": { "object": null },
                    "name": "Folders",
                    "description": "List of directories to include in the backup."
                },
                "name": {
                    "example": "Partial backup 1",
                    "selector": { "text": null },
                    "name": "Name",
                    "description": "Optional (default = current date and time)."
                },
                "password": {
                    "example": "password",
                    "selector": { "text": null },
                    "name": "Password",
                    "description": "Password to protect the backup with."
                },
                "compressed": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Compressed",
                    "description": "Compresses the backup files."
                },
                "location": {
                    "example": "my_backup_mount",
                    "selector": { "backup_location": null },
                    "name": "Location",
                    "description": "Name of a backup network storage to host backups."
                }
            }
        },
        "restore_full": {
            "name": "Restore from full backup.",
            "description": "Restores from full backup.",
            "fields": {
                "slug": {
                    "required": true,
                    "selector": { "text": null },
                    "name": "Slug",
                    "description": "Slug of backup to restore from."
                },
                "password": {
                    "example": "password",
                    "selector": { "text": null },
                    "name": "Password",
                    "description": "Optional password."
                }
            }
        },
        "restore_partial": {
            "name": "Restore from partial backup.",
            "description": "Restores from a partial backup.",
            "fields": {
                "slug": {
                    "required": true,
                    "selector": { "text": null },
                    "name": "Slug",
                    "description": "Slug of backup to restore from."
                },
                "homeassistant": {
                    "selector": { "boolean": null },
                    "name": "Home Assistant settings",
                    "description": "Restores Home Assistant."
                },
                "folders": {
                    "example": ["homeassistant", "share"],
                    "selector": { "object": null },
                    "name": "Folders",
                    "description": "List of directories to include in the backup."
                },
                "addons": {
                    "example": [
                        "core_ssh",
                        "core_samba",
                        "core_mosquitto"
                    ],
                    "selector": { "object": null },
                    "name": "Add-ons",
                    "description": "List of add-ons to include in the backup. Use the name slug of the add-on."
                },
                "password": {
                    "example": "password",
                    "selector": { "text": null },
                    "name": "Password",
                    "description": "Optional password."
                }
            }
        }
    },
    "update": {
        "install": {
            "name": "Install update",
            "description": "Installs an update for this device or service.",
            "fields": {
                "version": {
                    "required": false,
                    "example": "1.0.0",
                    "selector": { "text": null },
                    "name": "Version",
                    "description": "The version to install. If omitted, the latest version will be installed."
                },
                "backup": {
                    "required": false,
                    "selector": { "boolean": null },
                    "name": "Backup",
                    "description": "If supported by the integration, this creates a backup before starting the update ."
                }
            },
            "target": { "entity": [{ "domain": ["update"] }] }
        },
        "skip": {
            "name": "Skip update",
            "description": "Marks currently available update as skipped.",
            "fields": {},
            "target": { "entity": [{ "domain": ["update"] }] }
        },
        "clear_skipped": {
            "name": "Clear skipped update",
            "description": "Removes the skipped version marker from an update.",
            "fields": {},
            "target": { "entity": [{ "domain": ["update"] }] }
        }
    },
    "cloud": {
        "remote_connect": {
            "name": "Remote connect",
            "description": "Makes the instance UI accessible from outside of the local network by using Home Assistant Cloud.",
            "fields": {}
        },
        "remote_disconnect": {
            "name": "Remote disconnect",
            "description": "Disconnects the Home Assistant UI from the Home Assistant Cloud. You will no longer be able to access your Home Assistant instance from outside your local network.",
            "fields": {}
        }
    },
    "ffmpeg": {
        "start": {
            "name": "Start",
            "description": "Sends a start command to a ffmpeg based sensor.",
            "fields": {
                "entity_id": {
                    "selector": {
                        "entity": {
                            "integration": "ffmpeg",
                            "domain": "binary_sensor"
                        }
                    },
                    "name": "Entity",
                    "description": "Name of entity that will start. Platform dependent."
                }
            }
        },
        "stop": {
            "name": "Stop",
            "description": "Sends a stop command to a ffmpeg based sensor.",
            "fields": {
                "entity_id": {
                    "selector": {
                        "entity": {
                            "integration": "ffmpeg",
                            "domain": "binary_sensor"
                        }
                    },
                    "name": "Entity",
                    "description": "Name of entity that will stop. Platform dependent."
                }
            }
        },
        "restart": {
            "name": "Restart",
            "description": "Sends a restart command to a ffmpeg based sensor.",
            "fields": {
                "entity_id": {
                    "selector": {
                        "entity": {
                            "integration": "ffmpeg",
                            "domain": "binary_sensor"
                        }
                    },
                    "name": "Entity",
                    "description": "Name of entity that will restart. Platform dependent."
                }
            }
        }
    },
    "scene": {
        "turn_on": {
            "name": "Activate",
            "description": "Activates a scene.",
            "fields": {
                "transition": {
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 300,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Transition",
                    "description": "Time it takes the devices to transition into the states defined in the scene."
                }
            },
            "target": { "entity": [{ "domain": ["scene"] }] }
        },
        "reload": {
            "name": "Reload",
            "description": "Reloads the scenes from the YAML-configuration.",
            "fields": {}
        },
        "apply": {
            "name": "Apply",
            "description": "Activates a scene with configuration.",
            "fields": {
                "entities": {
                    "required": true,
                    "example": "light.kitchen: \"on\"\nlight.ceiling:\n  state: \"on\"\n  brightness: 80\n",
                    "selector": { "object": null },
                    "name": "Entities state",
                    "description": "List of entities and their target state."
                },
                "transition": {
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 300,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Transition",
                    "description": "Time it takes the devices to transition into the states defined in the scene."
                }
            }
        },
        "create": {
            "name": "Create",
            "description": "Creates a new scene.",
            "fields": {
                "scene_id": {
                    "required": true,
                    "example": "all_lights",
                    "selector": { "text": null },
                    "name": "Scene entity ID",
                    "description": "The entity ID of the new scene."
                },
                "entities": {
                    "advanced": true,
                    "example": "light.tv_back_light: \"on\"\nlight.ceiling:\n  state: \"on\"\n  brightness: 200\n",
                    "selector": { "object": null },
                    "name": "Entities state",
                    "description": "List of entities and their target state. If your entities are already in the target state right now, use `snapshot_entities` instead."
                },
                "snapshot_entities": {
                    "example": "- light.ceiling\n- light.kitchen\n",
                    "selector": { "entity": { "multiple": true } },
                    "name": "Snapshot entities",
                    "description": "List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine the `snapshot_entities` with `entities`."
                }
            }
        },
        "delete": {
            "name": "Delete",
            "description": "Deletes a dynamically created scene.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "integration": "homeassistant",
                        "domain": ["scene"]
                    }
                ]
            }
        }
    },
    "logbook": {
        "log": {
            "name": "Log",
            "description": "Creates a custom entry in the logbook.",
            "fields": {
                "name": {
                    "required": true,
                    "example": "Kitchen",
                    "selector": { "text": null },
                    "name": "Name",
                    "description": "Custom name for an entity, can be referenced using an `entity_id`."
                },
                "message": {
                    "required": true,
                    "example": "is being used",
                    "selector": { "text": null },
                    "name": "Message",
                    "description": "Message of the logbook entry."
                },
                "entity_id": {
                    "selector": { "entity": null },
                    "name": "Entity ID",
                    "description": "Entity to reference in the logbook entry."
                },
                "domain": {
                    "example": "light",
                    "selector": { "text": null },
                    "name": "Domain",
                    "description": "Determines which icon is used in the logbook entry. The icon illustrates the integration domain related to this logbook entry."
                }
            }
        }
    },
    "input_button": {
        "reload": {
            "name": "Reload",
            "description": "Reloads helpers from the YAML-configuration.",
            "fields": {}
        },
        "press": {
            "name": "Press",
            "description": "Mimics the physical button press on the device.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_button"] }] }
        }
    },
    "input_number": {
        "reload": {
            "name": "Reload",
            "description": "Reloads helpers from the YAML-configuration.",
            "fields": {}
        },
        "set_value": {
            "name": "Set",
            "description": "Sets the value.",
            "fields": {
                "value": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 9223372036854776000,
                            "step": 0.001,
                            "mode": "box"
                        }
                    },
                    "name": "Value",
                    "description": "The target value."
                }
            },
            "target": { "entity": [{ "domain": ["input_number"] }] }
        },
        "increment": {
            "name": "Increment",
            "description": "Increments the value by 1 step.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_number"] }] }
        },
        "decrement": {
            "name": "Decrement",
            "description": "Decrements the current value by 1 step.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_number"] }] }
        }
    },
    "group": {
        "reload": {
            "name": "Reload",
            "description": "Reloads group configuration, entities, and notify services from YAML-configuration.",
            "fields": {}
        },
        "set": {
            "name": "Set",
            "description": "Creates/Updates a user group.",
            "fields": {
                "object_id": {
                    "required": true,
                    "example": "test_group",
                    "selector": { "text": null },
                    "name": "Object ID",
                    "description": "Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]."
                },
                "name": {
                    "example": "My test group",
                    "selector": { "text": null },
                    "name": "Name",
                    "description": "Name of the group."
                },
                "icon": {
                    "example": "mdi:camera",
                    "selector": { "icon": null },
                    "name": "Icon",
                    "description": "Name of the icon for the group."
                },
                "entities": {
                    "example": "domain.entity_id1, domain.entity_id2",
                    "selector": { "entity": { "multiple": true } },
                    "name": "Entities",
                    "description": "List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`."
                },
                "add_entities": {
                    "example": "domain.entity_id1, domain.entity_id2",
                    "selector": { "entity": { "multiple": true } },
                    "name": "Add entities",
                    "description": "List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`."
                },
                "remove_entities": {
                    "example": "domain.entity_id1, domain.entity_id2",
                    "selector": { "entity": { "multiple": true } },
                    "name": "Remove entities",
                    "description": "List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`."
                },
                "all": {
                    "selector": { "boolean": null },
                    "name": "All",
                    "description": "Enable this option if the group should only be used when all entities are in state `on`."
                }
            }
        },
        "remove": {
            "name": "Remove",
            "description": "Removes a group.",
            "fields": {
                "object_id": {
                    "required": true,
                    "example": "test_group",
                    "selector": { "object": null },
                    "name": "Object ID",
                    "description": "Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]."
                }
            }
        }
    },
    "cover": {
        "open_cover": {
            "name": "Open",
            "description": "Opens a cover.",
            "fields": {},
            "target": {
                "entity": [
                    { "domain": ["cover"], "supported_features": [1] }
                ]
            }
        },
        "close_cover": {
            "name": "Close",
            "description": "Closes a cover.",
            "fields": {},
            "target": {
                "entity": [
                    { "domain": ["cover"], "supported_features": [2] }
                ]
            }
        },
        "set_cover_position": {
            "name": "Set position",
            "description": "Moves a cover to a specific position.",
            "fields": {
                "position": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Position",
                    "description": "Target position."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["cover"], "supported_features": [4] }
                ]
            }
        },
        "stop_cover": {
            "name": "Stop",
            "description": "Stops the cover movement.",
            "fields": {},
            "target": {
                "entity": [
                    { "domain": ["cover"], "supported_features": [8] }
                ]
            }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles a cover open/closed.",
            "fields": {},
            "target": {
                "entity": [
                    { "domain": ["cover"], "supported_features": [3] }
                ]
            }
        },
        "open_cover_tilt": {
            "name": "Open tilt",
            "description": "Tilts a cover open.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["cover"],
                        "supported_features": [16]
                    }
                ]
            }
        },
        "close_cover_tilt": {
            "name": "Close tilt",
            "description": "Tilts a cover to close.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["cover"],
                        "supported_features": [32]
                    }
                ]
            }
        },
        "stop_cover_tilt": {
            "name": "Stop tilt",
            "description": "Stops a tilting cover movement.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["cover"],
                        "supported_features": [64]
                    }
                ]
            }
        },
        "set_cover_tilt_position": {
            "name": "Set tilt position",
            "description": "Moves a cover tilt to a specific position.",
            "fields": {
                "tilt_position": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Tilt position",
                    "description": "Target tilt positition."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["cover"],
                        "supported_features": [128]
                    }
                ]
            }
        },
        "toggle_cover_tilt": {
            "name": "Toggle tilt",
            "description": "Toggles a cover tilt open/closed.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["cover"],
                        "supported_features": [48]
                    }
                ]
            }
        }
    },
    "media_player": {
        "turn_on": {
            "name": "Turn on",
            "description": "Turns on the power of the media player.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [128]
                    }
                ]
            }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns off the power of the media player.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [256]
                    }
                ]
            }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles a media player on/off.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [384]
                    }
                ]
            }
        },
        "volume_up": {
            "name": "Turn up volume",
            "description": "Turns up the volume.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [4, 1024]
                    }
                ]
            }
        },
        "volume_down": {
            "name": "Turn down volume",
            "description": "Turns down the volume.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [4, 1024]
                    }
                ]
            }
        },
        "media_play_pause": {
            "name": "Play/Pause",
            "description": "Toggles play/pause.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [16385]
                    }
                ]
            }
        },
        "media_play": {
            "name": "Play",
            "description": "Starts playing.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [16384]
                    }
                ]
            }
        },
        "media_pause": {
            "name": "Pause",
            "description": "Pauses.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [1]
                    }
                ]
            }
        },
        "media_stop": {
            "name": "Stop",
            "description": "Stops playing.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [4096]
                    }
                ]
            }
        },
        "media_next_track": {
            "name": "Next",
            "description": "Selects the next track.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [32]
                    }
                ]
            }
        },
        "media_previous_track": {
            "name": "Previous",
            "description": "Selects the previous track.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [16]
                    }
                ]
            }
        },
        "clear_playlist": {
            "name": "Clear playlist",
            "description": "Clears the playlist.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [8192]
                    }
                ]
            }
        },
        "volume_set": {
            "name": "Set volume",
            "description": "Sets the volume level.",
            "fields": {
                "volume_level": {
                    "required": true,
                    "selector": {
                        "number": { "min": 0, "max": 1, "step": 0.01 }
                    },
                    "name": "Level",
                    "description": "The volume. 0 is inaudible, 1 is the maximum volume."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [4]
                    }
                ]
            }
        },
        "volume_mute": {
            "name": "Mute/unmute volume",
            "description": "Mutes or unmutes the media player.",
            "fields": {
                "is_volume_muted": {
                    "required": true,
                    "selector": { "boolean": null },
                    "name": "Muted",
                    "description": "Defines whether or not it is muted."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [8]
                    }
                ]
            }
        },
        "media_seek": {
            "name": "Seek",
            "description": "Allows you to go to a different part of the media that is currently playing.",
            "fields": {
                "seek_position": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 9223372036854776000,
                            "step": 0.01,
                            "mode": "box"
                        }
                    },
                    "name": "Position",
                    "description": "Target position in the currently playing media. The format is platform dependent."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [2]
                    }
                ]
            }
        },
        "join": {
            "name": "Join",
            "description": "Groups media players together for synchronous playback. Only works on supported multiroom audio systems.",
            "fields": {
                "group_members": {
                    "required": true,
                    "example": "- media_player.multiroom_player2\n- media_player.multiroom_player3\n",
                    "selector": {
                        "entity": {
                            "multiple": true,
                            "domain": "media_player"
                        }
                    },
                    "name": "Group members",
                    "description": "The players which will be synced with the playback specified in `target`."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [524288]
                    }
                ]
            }
        },
        "select_source": {
            "name": "Select source",
            "description": "Sends the media player the command to change input source.",
            "fields": {
                "source": {
                    "required": true,
                    "example": "video1",
                    "selector": { "text": null },
                    "name": "Source",
                    "description": "Name of the source to switch to. Platform dependent."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [2048]
                    }
                ]
            }
        },
        "select_sound_mode": {
            "name": "Select sound mode",
            "description": "Selects a specific sound mode.",
            "fields": {
                "sound_mode": {
                    "example": "Music",
                    "selector": { "text": null },
                    "name": "Sound mode",
                    "description": "Name of the sound mode to switch to."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [65536]
                    }
                ]
            }
        },
        "play_media": {
            "name": "Play media",
            "description": "Starts playing specified media.",
            "fields": {
                "media_content_id": {
                    "required": true,
                    "example": "https://home-assistant.io/images/cast/splash.png",
                    "selector": { "text": null },
                    "name": "Content ID",
                    "description": "The ID of the content to play. Platform dependent."
                },
                "media_content_type": {
                    "required": true,
                    "example": "music",
                    "selector": { "text": null },
                    "name": "Content type",
                    "description": "The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist."
                },
                "enqueue": {
                    "filter": { "supported_features": [2097152] },
                    "required": false,
                    "selector": {
                        "select": {
                            "options": [
                                "play",
                                "next",
                                "add",
                                "replace"
                            ],
                            "translation_key": "enqueue"
                        }
                    },
                    "name": "Enqueue",
                    "description": "If the content should be played now or be added to the queue."
                },
                "announce": {
                    "filter": { "supported_features": [1048576] },
                    "required": false,
                    "example": "true",
                    "selector": { "boolean": null },
                    "name": "Announce",
                    "description": "If the media should be played as an announcement."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [512]
                    }
                ]
            }
        },
        "shuffle_set": {
            "name": "Shuffle",
            "description": "Playback mode that selects the media in randomized order.",
            "fields": {
                "shuffle": {
                    "required": true,
                    "selector": { "boolean": null },
                    "name": "Shuffle",
                    "description": "Whether or not shuffle mode is enabled."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [32768]
                    }
                ]
            }
        },
        "unjoin": {
            "name": "Unjoin",
            "description": "Removes the player from a group. Only works on platforms which support player groups.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [524288]
                    }
                ]
            }
        },
        "repeat_set": {
            "name": "Repeat",
            "description": "Playback mode that plays the media in a loop.",
            "fields": {
                "repeat": {
                    "required": true,
                    "selector": {
                        "select": {
                            "options": ["off", "all", "one"],
                            "translation_key": "repeat"
                        }
                    },
                    "name": "Repeat mode",
                    "description": "Repeat mode to set."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["media_player"],
                        "supported_features": [262144]
                    }
                ]
            }
        }
    },
    "script": {
        "reload": {
            "name": "Reload",
            "description": "Reloads all the available scripts.",
            "fields": {}
        },
        "turn_on": {
            "name": "Turn on",
            "description": "Runs the sequence of actions defined in a script.",
            "fields": {},
            "target": { "entity": [{ "domain": ["script"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Stops a running script.",
            "fields": {},
            "target": { "entity": [{ "domain": ["script"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggle a script. Starts it, if isn't running, stops it otherwise.",
            "fields": {},
            "target": { "entity": [{ "domain": ["script"] }] }
        }
    },
    "timer": {
        "reload": {
            "name": "Reload",
            "description": "Reloads timers from the YAML-configuration.",
            "fields": {}
        },
        "start": {
            "name": "Start",
            "description": "Starts a timer.",
            "fields": {
                "duration": {
                    "example": "00:01:00 or 60",
                    "selector": { "text": null },
                    "name": "Duration",
                    "description": "Duration the timer requires to finish. [optional]."
                }
            },
            "target": { "entity": [{ "domain": ["timer"] }] }
        },
        "pause": {
            "name": "Pause",
            "description": "Pauses a timer.",
            "fields": {},
            "target": { "entity": [{ "domain": ["timer"] }] }
        },
        "cancel": {
            "name": "Cancel",
            "description": "Cancels a timer.",
            "fields": {},
            "target": { "entity": [{ "domain": ["timer"] }] }
        },
        "finish": {
            "name": "Finish",
            "description": "Finishes a timer.",
            "fields": {},
            "target": { "entity": [{ "domain": ["timer"] }] }
        },
        "change": {
            "name": "Change",
            "description": "Changes a timer.",
            "fields": {
                "duration": {
                    "default": 0,
                    "required": true,
                    "example": "00:01:00, 60 or -60",
                    "selector": { "text": null },
                    "name": "Duration",
                    "description": "Duration to add or subtract to the running timer."
                }
            },
            "target": { "entity": [{ "domain": ["timer"] }] }
        }
    },
    "zone": {
        "reload": {
            "name": "Reload",
            "description": "Reloads zones from the YAML-configuration.",
            "fields": {}
        }
    },
    "input_select": {
        "reload": {
            "name": "Reload",
            "description": "Reloads helpers from the YAML-configuration.",
            "fields": {}
        },
        "select_first": {
            "name": "First",
            "description": "Selects the first option.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_select"] }] }
        },
        "select_last": {
            "name": "Last",
            "description": "Selects the last option.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_select"] }] }
        },
        "select_next": {
            "name": "Next",
            "description": "Select the next option.",
            "fields": {
                "cycle": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Cycle",
                    "description": "If the option should cycle from the last to the first option on the list."
                }
            },
            "target": { "entity": [{ "domain": ["input_select"] }] }
        },
        "select_option": {
            "name": "Select",
            "description": "Selects an option.",
            "fields": {
                "option": {
                    "required": true,
                    "example": "\"Item A\"",
                    "selector": { "text": null },
                    "name": "Option",
                    "description": "Option to be selected."
                }
            },
            "target": { "entity": [{ "domain": ["input_select"] }] }
        },
        "select_previous": {
            "name": "Previous",
            "description": "Selects the previous option.",
            "fields": {
                "cycle": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Cycle",
                    "description": "If the option should cycle from the last to the first option on the list."
                }
            },
            "target": { "entity": [{ "domain": ["input_select"] }] }
        },
        "set_options": {
            "name": "Set options",
            "description": "Sets the options.",
            "fields": {
                "options": {
                    "required": true,
                    "example": "[\"Item A\", \"Item B\", \"Item C\"]",
                    "selector": { "object": null },
                    "name": "Options",
                    "description": "List of options."
                }
            },
            "target": { "entity": [{ "domain": ["input_select"] }] }
        }
    },
    "input_boolean": {
        "reload": {
            "name": "Reload",
            "description": "Reloads helpers from the YAML-configuration.",
            "fields": {}
        },
        "turn_on": {
            "name": "Turn on",
            "description": "Turns on the helper.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_boolean"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns off the helper.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_boolean"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles the helper on/off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["input_boolean"] }] }
        }
    },
    "conversation": {
        "process": {
            "name": "Process",
            "description": "Launches a conversation from a transcribed text.",
            "fields": {
                "text": {
                    "example": "Turn all lights on",
                    "required": true,
                    "selector": { "text": null },
                    "name": "Text",
                    "description": "Transcribed text input."
                },
                "language": {
                    "example": "NL",
                    "selector": { "text": null },
                    "name": "Language",
                    "description": "Language of text. Defaults to server language."
                },
                "agent_id": {
                    "example": "homeassistant",
                    "selector": { "conversation_agent": null },
                    "name": "Agent",
                    "description": "Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands."
                },
                "conversation_id": {
                    "example": "my_conversation_1",
                    "selector": { "text": null },
                    "name": "Conversation ID",
                    "description": "ID of the conversation, to be able to continue a previous conversation"
                }
            },
            "response": { "optional": true }
        },
        "reload": {
            "name": "Reload",
            "description": "Reloads the intent configuration.",
            "fields": {
                "language": {
                    "example": "NL",
                    "selector": { "text": null },
                    "name": "Language",
                    "description": "Language to clear cached intents for. Defaults to server language."
                },
                "agent_id": {
                    "example": "homeassistant",
                    "selector": { "conversation_agent": null },
                    "name": "Agent",
                    "description": "Conversation agent to reload."
                }
            }
        }
    },
    "tts": {
        "speak": {
            "name": "Speak",
            "description": "Speaks something using text-to-speech on a media player.",
            "fields": {
                "media_player_entity_id": {
                    "required": true,
                    "selector": {
                        "entity": { "domain": "media_player" }
                    },
                    "name": "Media player entity",
                    "description": "Media players to play the message."
                },
                "message": {
                    "example": "My name is hanna",
                    "required": true,
                    "selector": { "text": null },
                    "name": "Message",
                    "description": "The text you want to convert into speech so that you can listen to it on your device."
                },
                "cache": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Cache",
                    "description": "Stores this message locally so that when the text is requested again, the output can be produced more quickly."
                },
                "language": {
                    "example": "ru",
                    "selector": { "text": null },
                    "name": "Language",
                    "description": "Language to use for speech generation."
                },
                "options": {
                    "advanced": true,
                    "example": "platform specific",
                    "selector": { "object": null },
                    "name": "Options",
                    "description": "A dictionary containing integration-specific options."
                }
            },
            "target": { "entity": [{ "domain": ["tts"] }] }
        },
        "clear_cache": {
            "name": "Clear TTS cache",
            "description": "Removes all cached text-to-speech files and purges the memory.",
            "fields": {}
        },
        "google_translate_say": {
            "name": "Say a TTS message with google_translate",
            "description": "Say something using text-to-speech on a media player with google_translate.",
            "fields": {
                "entity_id": {
                    "required": true,
                    "selector": {
                        "entity": { "domain": "media_player" }
                    }
                },
                "message": {
                    "example": "My name is hanna",
                    "required": true,
                    "selector": { "text": null }
                },
                "cache": {
                    "default": false,
                    "selector": { "boolean": null }
                },
                "language": {
                    "example": "ru",
                    "selector": { "text": null }
                },
                "options": {
                    "advanced": true,
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "cloud_say": {
            "name": "Say a TTS message with cloud",
            "description": "Say something using text-to-speech on a media player with cloud.",
            "fields": {
                "entity_id": {
                    "required": true,
                    "selector": {
                        "entity": { "domain": "media_player" }
                    }
                },
                "message": {
                    "example": "My name is hanna",
                    "required": true,
                    "selector": { "text": null }
                },
                "cache": {
                    "default": false,
                    "selector": { "boolean": null }
                },
                "language": {
                    "example": "ru",
                    "selector": { "text": null }
                },
                "options": {
                    "advanced": true,
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        }
    },
    "input_datetime": {
        "reload": {
            "name": "Reload",
            "description": "Reloads helpers from the YAML-configuration.",
            "fields": {}
        },
        "set_datetime": {
            "name": "Set",
            "description": "Sets the date and/or time.",
            "fields": {
                "date": {
                    "example": "\"2019-04-20\"",
                    "selector": { "text": null },
                    "name": "Date",
                    "description": "The target date."
                },
                "time": {
                    "example": "\"05:04:20\"",
                    "selector": { "time": null },
                    "name": "Time",
                    "description": "The target time."
                },
                "datetime": {
                    "example": "\"2019-04-20 05:04:20\"",
                    "selector": { "text": null },
                    "name": "Date & time",
                    "description": "The target date & time."
                },
                "timestamp": {
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 9223372036854776000,
                            "mode": "box"
                        }
                    },
                    "name": "Timestamp",
                    "description": "The target date & time, expressed by a UNIX timestamp."
                }
            },
            "target": { "entity": [{ "domain": ["input_datetime"] }] }
        }
    },
    "light": {
        "turn_on": {
            "name": "Turn on",
            "description": "Turn on one or more lights and adjust properties of the light, even when they are turned on already.",
            "fields": {
                "transition": {
                    "filter": { "supported_features": [32] },
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 300,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Transition",
                    "description": "Duration it takes to get to next state."
                },
                "rgb_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "example": "[255, 100, 100]",
                    "selector": { "color_rgb": null },
                    "name": "Color",
                    "description": "The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue."
                },
                "rgbw_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[255, 100, 100, 50]",
                    "selector": { "object": null },
                    "name": "RGBW-color",
                    "description": "The color in RGBW format. A list of four integers between 0 and 255 representing the values of red, green, blue, and white."
                },
                "rgbww_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[255, 100, 100, 50, 70]",
                    "selector": { "object": null },
                    "name": "RGBWW-color",
                    "description": "The color in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white."
                },
                "color_name": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "select": {
                            "translation_key": "color_name",
                            "options": [
                                "homeassistant",
                                "aliceblue",
                                "antiquewhite",
                                "aqua",
                                "aquamarine",
                                "azure",
                                "beige",
                                "bisque",
                                "blanchedalmond",
                                "blue",
                                "blueviolet",
                                "brown",
                                "burlywood",
                                "cadetblue",
                                "chartreuse",
                                "chocolate",
                                "coral",
                                "cornflowerblue",
                                "cornsilk",
                                "crimson",
                                "cyan",
                                "darkblue",
                                "darkcyan",
                                "darkgoldenrod",
                                "darkgray",
                                "darkgreen",
                                "darkgrey",
                                "darkkhaki",
                                "darkmagenta",
                                "darkolivegreen",
                                "darkorange",
                                "darkorchid",
                                "darkred",
                                "darksalmon",
                                "darkseagreen",
                                "darkslateblue",
                                "darkslategray",
                                "darkslategrey",
                                "darkturquoise",
                                "darkviolet",
                                "deeppink",
                                "deepskyblue",
                                "dimgray",
                                "dimgrey",
                                "dodgerblue",
                                "firebrick",
                                "floralwhite",
                                "forestgreen",
                                "fuchsia",
                                "gainsboro",
                                "ghostwhite",
                                "gold",
                                "goldenrod",
                                "gray",
                                "green",
                                "greenyellow",
                                "grey",
                                "honeydew",
                                "hotpink",
                                "indianred",
                                "indigo",
                                "ivory",
                                "khaki",
                                "lavender",
                                "lavenderblush",
                                "lawngreen",
                                "lemonchiffon",
                                "lightblue",
                                "lightcoral",
                                "lightcyan",
                                "lightgoldenrodyellow",
                                "lightgray",
                                "lightgreen",
                                "lightgrey",
                                "lightpink",
                                "lightsalmon",
                                "lightseagreen",
                                "lightskyblue",
                                "lightslategray",
                                "lightslategrey",
                                "lightsteelblue",
                                "lightyellow",
                                "lime",
                                "limegreen",
                                "linen",
                                "magenta",
                                "maroon",
                                "mediumaquamarine",
                                "mediumblue",
                                "mediumorchid",
                                "mediumpurple",
                                "mediumseagreen",
                                "mediumslateblue",
                                "mediumspringgreen",
                                "mediumturquoise",
                                "mediumvioletred",
                                "midnightblue",
                                "mintcream",
                                "mistyrose",
                                "moccasin",
                                "navajowhite",
                                "navy",
                                "navyblue",
                                "oldlace",
                                "olive",
                                "olivedrab",
                                "orange",
                                "orangered",
                                "orchid",
                                "palegoldenrod",
                                "palegreen",
                                "paleturquoise",
                                "palevioletred",
                                "papayawhip",
                                "peachpuff",
                                "peru",
                                "pink",
                                "plum",
                                "powderblue",
                                "purple",
                                "red",
                                "rosybrown",
                                "royalblue",
                                "saddlebrown",
                                "salmon",
                                "sandybrown",
                                "seagreen",
                                "seashell",
                                "sienna",
                                "silver",
                                "skyblue",
                                "slateblue",
                                "slategray",
                                "slategrey",
                                "snow",
                                "springgreen",
                                "steelblue",
                                "tan",
                                "teal",
                                "thistle",
                                "tomato",
                                "turquoise",
                                "violet",
                                "wheat",
                                "white",
                                "whitesmoke",
                                "yellow",
                                "yellowgreen"
                            ]
                        }
                    },
                    "name": "Color name",
                    "description": "A human-readable color name."
                },
                "hs_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[300, 70]",
                    "selector": { "object": null },
                    "name": "Hue/Sat color",
                    "description": "Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100."
                },
                "xy_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[0.52, 0.43]",
                    "selector": { "object": null },
                    "name": "XY-color",
                    "description": "Color in XY-format. A list of two decimal numbers between 0 and 1."
                },
                "color_temp": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "color_temp": {
                            "unit": "mired",
                            "min": 153,
                            "max": 500
                        }
                    },
                    "name": "Color temperature",
                    "description": "Color temperature in mireds."
                },
                "kelvin": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "selector": {
                        "color_temp": {
                            "unit": "kelvin",
                            "min": 2000,
                            "max": 6500
                        }
                    },
                    "name": "Color temperature",
                    "description": "Color temperature in Kelvin."
                },
                "brightness": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "brightness",
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "number": { "min": 0, "max": 255 }
                    },
                    "name": "Brightness value",
                    "description": "Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness."
                },
                "brightness_pct": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "brightness",
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Brightness",
                    "description": "Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness."
                },
                "brightness_step": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "brightness",
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "number": { "min": -225, "max": 255 }
                    },
                    "name": "Brightness step value",
                    "description": "Change brightness by an amount."
                },
                "brightness_step_pct": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "brightness",
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "selector": {
                        "number": {
                            "min": -100,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Brightness step",
                    "description": "Change brightness by a percentage."
                },
                "white": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": ["white"]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "constant": {
                            "value": true,
                            "label": "Enabled"
                        }
                    },
                    "name": "White",
                    "description": "Set the light to white mode."
                },
                "profile": {
                    "advanced": true,
                    "example": "relax",
                    "selector": { "text": null },
                    "name": "Profile",
                    "description": "Name of a light profile to use."
                },
                "flash": {
                    "filter": { "supported_features": [8] },
                    "advanced": true,
                    "selector": {
                        "select": {
                            "options": [
                                { "label": "Long", "value": "long" },
                                { "label": "Short", "value": "short" }
                            ]
                        }
                    },
                    "name": "Flash",
                    "description": "Tell light to flash, can be either value short or long."
                },
                "effect": {
                    "filter": { "supported_features": [4] },
                    "selector": { "text": null },
                    "name": "Effect",
                    "description": "Light effect."
                }
            },
            "target": { "entity": [{ "domain": ["light"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turn off one or more lights.",
            "fields": {
                "transition": {
                    "filter": { "supported_features": [32] },
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 300,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Transition",
                    "description": "Duration it takes to get to next state."
                },
                "flash": {
                    "filter": { "supported_features": [8] },
                    "advanced": true,
                    "selector": {
                        "select": {
                            "options": [
                                { "label": "Long", "value": "long" },
                                { "label": "Short", "value": "short" }
                            ]
                        }
                    },
                    "name": "Flash",
                    "description": "Tell light to flash, can be either value short or long."
                }
            },
            "target": { "entity": [{ "domain": ["light"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles one or more lights, from on to off, or, off to on, based on their current state.",
            "fields": {
                "transition": {
                    "filter": { "supported_features": [32] },
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 300,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Transition",
                    "description": "Duration it takes to get to next state."
                },
                "rgb_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "example": "[255, 100, 100]",
                    "selector": { "color_rgb": null },
                    "name": "Color",
                    "description": "The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue."
                },
                "rgbw_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[255, 100, 100, 50]",
                    "selector": { "object": null },
                    "name": "RGBW-color",
                    "description": "The color in RGBW format. A list of four integers between 0 and 255 representing the values of red, green, blue, and white."
                },
                "rgbww_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[255, 100, 100, 50, 70]",
                    "selector": { "object": null },
                    "name": "RGBWW-color",
                    "description": "The color in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white."
                },
                "color_name": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "select": {
                            "translation_key": "color_name",
                            "options": [
                                "homeassistant",
                                "aliceblue",
                                "antiquewhite",
                                "aqua",
                                "aquamarine",
                                "azure",
                                "beige",
                                "bisque",
                                "blanchedalmond",
                                "blue",
                                "blueviolet",
                                "brown",
                                "burlywood",
                                "cadetblue",
                                "chartreuse",
                                "chocolate",
                                "coral",
                                "cornflowerblue",
                                "cornsilk",
                                "crimson",
                                "cyan",
                                "darkblue",
                                "darkcyan",
                                "darkgoldenrod",
                                "darkgray",
                                "darkgreen",
                                "darkgrey",
                                "darkkhaki",
                                "darkmagenta",
                                "darkolivegreen",
                                "darkorange",
                                "darkorchid",
                                "darkred",
                                "darksalmon",
                                "darkseagreen",
                                "darkslateblue",
                                "darkslategray",
                                "darkslategrey",
                                "darkturquoise",
                                "darkviolet",
                                "deeppink",
                                "deepskyblue",
                                "dimgray",
                                "dimgrey",
                                "dodgerblue",
                                "firebrick",
                                "floralwhite",
                                "forestgreen",
                                "fuchsia",
                                "gainsboro",
                                "ghostwhite",
                                "gold",
                                "goldenrod",
                                "gray",
                                "green",
                                "greenyellow",
                                "grey",
                                "honeydew",
                                "hotpink",
                                "indianred",
                                "indigo",
                                "ivory",
                                "khaki",
                                "lavender",
                                "lavenderblush",
                                "lawngreen",
                                "lemonchiffon",
                                "lightblue",
                                "lightcoral",
                                "lightcyan",
                                "lightgoldenrodyellow",
                                "lightgray",
                                "lightgreen",
                                "lightgrey",
                                "lightpink",
                                "lightsalmon",
                                "lightseagreen",
                                "lightskyblue",
                                "lightslategray",
                                "lightslategrey",
                                "lightsteelblue",
                                "lightyellow",
                                "lime",
                                "limegreen",
                                "linen",
                                "magenta",
                                "maroon",
                                "mediumaquamarine",
                                "mediumblue",
                                "mediumorchid",
                                "mediumpurple",
                                "mediumseagreen",
                                "mediumslateblue",
                                "mediumspringgreen",
                                "mediumturquoise",
                                "mediumvioletred",
                                "midnightblue",
                                "mintcream",
                                "mistyrose",
                                "moccasin",
                                "navajowhite",
                                "navy",
                                "navyblue",
                                "oldlace",
                                "olive",
                                "olivedrab",
                                "orange",
                                "orangered",
                                "orchid",
                                "palegoldenrod",
                                "palegreen",
                                "paleturquoise",
                                "palevioletred",
                                "papayawhip",
                                "peachpuff",
                                "peru",
                                "pink",
                                "plum",
                                "powderblue",
                                "purple",
                                "red",
                                "rosybrown",
                                "royalblue",
                                "saddlebrown",
                                "salmon",
                                "sandybrown",
                                "seagreen",
                                "seashell",
                                "sienna",
                                "silver",
                                "skyblue",
                                "slateblue",
                                "slategray",
                                "slategrey",
                                "snow",
                                "springgreen",
                                "steelblue",
                                "tan",
                                "teal",
                                "thistle",
                                "tomato",
                                "turquoise",
                                "violet",
                                "wheat",
                                "white",
                                "whitesmoke",
                                "yellow",
                                "yellowgreen"
                            ]
                        }
                    },
                    "name": "Color name",
                    "description": "A human-readable color name."
                },
                "hs_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[300, 70]",
                    "selector": { "object": null },
                    "name": "Hue/Sat color",
                    "description": "Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100."
                },
                "xy_color": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "example": "[0.52, 0.43]",
                    "selector": { "object": null },
                    "name": "XY-color",
                    "description": "Color in XY-format. A list of two decimal numbers between 0 and 1."
                },
                "color_temp": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "color_temp": {
                            "unit": "mired",
                            "min": 153,
                            "max": 500
                        }
                    },
                    "name": "Color temperature",
                    "description": "Color temperature in mireds."
                },
                "kelvin": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "selector": {
                        "color_temp": {
                            "unit": "kelvin",
                            "min": 2000,
                            "max": 6500
                        }
                    },
                    "name": "Color temperature",
                    "description": "Color temperature in Kelvin."
                },
                "brightness": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "brightness",
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "number": { "min": 0, "max": 255 }
                    },
                    "name": "Brightness value",
                    "description": "Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness."
                },
                "brightness_pct": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": [
                                "brightness",
                                "color_temp",
                                "hs",
                                "xy",
                                "rgb",
                                "rgbw",
                                "rgbww"
                            ]
                        }
                    },
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Brightness",
                    "description": "Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness."
                },
                "white": {
                    "filter": {
                        "attribute": {
                            "supported_color_modes": ["white"]
                        }
                    },
                    "advanced": true,
                    "selector": {
                        "constant": {
                            "value": true,
                            "label": "Enabled"
                        }
                    },
                    "name": "White",
                    "description": "Set the light to white mode."
                },
                "profile": {
                    "advanced": true,
                    "example": "relax",
                    "selector": { "text": null },
                    "name": "Profile",
                    "description": "Name of a light profile to use."
                },
                "flash": {
                    "filter": { "supported_features": [8] },
                    "advanced": true,
                    "selector": {
                        "select": {
                            "options": [
                                { "label": "Long", "value": "long" },
                                { "label": "Short", "value": "short" }
                            ]
                        }
                    },
                    "name": "Flash",
                    "description": "Tell light to flash, can be either value short or long."
                },
                "effect": {
                    "filter": { "supported_features": [4] },
                    "selector": { "text": null },
                    "name": "Effect",
                    "description": "Light effect."
                }
            },
            "target": { "entity": [{ "domain": ["light"] }] }
        }
    },
    "schedule": {
        "reload": {
            "name": "Reload",
            "description": "Reloads schedules from the YAML-configuration.",
            "fields": {}
        }
    },
    "input_text": {
        "reload": {
            "name": "Reload",
            "description": "Reloads helpers from the YAML-configuration.",
            "fields": {}
        },
        "set_value": {
            "name": "Set",
            "description": "Sets the value.",
            "fields": {
                "value": {
                    "required": true,
                    "example": "This is an example text",
                    "selector": { "text": null },
                    "name": "Value",
                    "description": "The target value."
                }
            },
            "target": { "entity": [{ "domain": ["input_text"] }] }
        }
    },
    "counter": {
        "increment": {
            "name": "Increment",
            "description": "Increments a counter.",
            "fields": {},
            "target": { "entity": [{ "domain": ["counter"] }] }
        },
        "decrement": {
            "name": "Decrement",
            "description": "Decrements a counter.",
            "fields": {},
            "target": { "entity": [{ "domain": ["counter"] }] }
        },
        "reset": {
            "name": "Reset",
            "description": "Resets a counter.",
            "fields": {},
            "target": { "entity": [{ "domain": ["counter"] }] }
        },
        "set_value": {
            "name": "Set",
            "description": "Sets the counter value.",
            "fields": {
                "value": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 9223372036854776000,
                            "mode": "box"
                        }
                    },
                    "name": "Value",
                    "description": "The new counter value the entity should be set to."
                }
            },
            "target": { "entity": [{ "domain": ["counter"] }] }
        }
    },
    "homekit": {
        "reset_accessory": {
            "name": "Reset accessory",
            "description": "Resets a HomeKit accessory.",
            "fields": {},
            "target": { "entity": [{}] }
        },
        "unpair": {
            "name": "Unpair an accessory or bridge",
            "description": "Forcefully removes all pairings from an accessory to allow re-pairing. Use this service if the accessory is no longer responsive, and you want to avoid deleting and re-adding the entry. Room locations, and accessory preferences will be lost.",
            "fields": {},
            "target": { "device": [{ "integration": "homekit" }] }
        },
        "reload": {
            "name": "Reload",
            "description": "Reloads homekit and re-process YAML-configuration.",
            "fields": {}
        }
    },
    "rest": {
        "reload": {
            "name": "Reload",
            "description": "Reloads REST entities from the YAML-configuration.",
            "fields": {}
        }
    },
    "notify": {
        "send_message": {
            "name": "Send a notification message",
            "description": "Sends a notification message.",
            "fields": {
                "message": {
                    "required": true,
                    "selector": { "text": null },
                    "name": "Message",
                    "description": "Your notification message."
                },
                "title": {
                    "required": false,
                    "selector": { "text": null },
                    "filter": { "supported_features": [1] },
                    "name": "Title",
                    "description": "Title for your notification message."
                }
            },
            "target": { "entity": [{ "domain": ["notify"] }] }
        },
        "persistent_notification": {
            "name": "Send a persistent notification",
            "description": "Sends a notification that is visible in the **Notifications** panel.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null },
                    "name": "Message",
                    "description": "Message body of the notification."
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null },
                    "name": "Title",
                    "description": "Title of the notification."
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null },
                    "name": "Data",
                    "description": "Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation.."
                }
            }
        },
        "mobile_app_pixel_6": {
            "name": "Send a notification via mobile_app_pixel_6",
            "description": "Sends a notification message using the mobile_app_pixel_6 integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "mobile_app_pixel_7a": {
            "name": "Send a notification via mobile_app_pixel_7a",
            "description": "Sends a notification message using the mobile_app_pixel_7a integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "mobile_app_ipad_di_gianmarco": {
            "name": "Send a notification via mobile_app_ipad_di_gianmarco",
            "description": "Sends a notification message using the mobile_app_ipad_di_gianmarco integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "mobile_app_mi_9t": {
            "name": "Send a notification via mobile_app_mi_9t",
            "description": "Sends a notification message using the mobile_app_mi_9t integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "notify": {
            "name": "Send a notification with notify",
            "description": "Sends a notification message using the notify service.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_tv_taverna": {
            "name": "Send a notification via alexa_media_tv_taverna",
            "description": "Sends a notification message using the alexa_media_tv_taverna integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_echo_flex_di_mamma": {
            "name": "Send a notification via alexa_media_echo_flex_di_mamma",
            "description": "Sends a notification message using the alexa_media_echo_flex_di_mamma integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_echo_dot_cucina": {
            "name": "Send a notification via alexa_media_echo_dot_cucina",
            "description": "Sends a notification message using the alexa_media_echo_dot_cucina integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_tv_sala": {
            "name": "Send a notification via alexa_media_tv_sala",
            "description": "Sends a notification message using the alexa_media_tv_sala integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_echo_flex_studio": {
            "name": "Send a notification via alexa_media_echo_flex_studio",
            "description": "Sends a notification message using the alexa_media_echo_flex_studio integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_echo_dot_cameretta": {
            "name": "Send a notification via alexa_media_echo_dot_cameretta",
            "description": "Sends a notification message using the alexa_media_echo_dot_cameretta integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_piano_superiore": {
            "name": "Send a notification via alexa_media_piano_superiore",
            "description": "Sends a notification message using the alexa_media_piano_superiore integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_gianmarco_s_alexa_app_for_pc": {
            "name": "Send a notification via alexa_media_gianmarco_s_alexa_app_for_pc",
            "description": "Sends a notification message using the alexa_media_gianmarco_s_alexa_app_for_pc integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_echo_show_sala": {
            "name": "Send a notification via alexa_media_echo_show_sala",
            "description": "Sends a notification message using the alexa_media_echo_show_sala integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_salotto": {
            "name": "Send a notification via alexa_media_salotto",
            "description": "Sends a notification message using the alexa_media_salotto integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_ovunque": {
            "name": "Send a notification via alexa_media_ovunque",
            "description": "Sends a notification message using the alexa_media_ovunque integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_this_device": {
            "name": "Send a notification via alexa_media_this_device",
            "description": "Sends a notification message using the alexa_media_this_device integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media": {
            "name": "Send a notification with alexa_media",
            "description": "Sends a notification message using the alexa_media service.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "mobile_app_oneplus_watch_2_2489": {
            "name": "Send a notification via mobile_app_oneplus_watch_2_2489",
            "description": "Sends a notification message using the mobile_app_oneplus_watch_2_2489 integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        },
        "alexa_media_last_called": {
            "name": "Send a notification via alexa_media_last_called",
            "description": "Sends a notification message using the alexa_media_last_called integration.",
            "fields": {
                "message": {
                    "required": true,
                    "example": "The garage door has been open for 10 minutes.",
                    "selector": { "text": null }
                },
                "title": {
                    "example": "Your Garage Door Friend",
                    "selector": { "text": null }
                },
                "target": {
                    "example": "platform specific",
                    "selector": { "object": null }
                },
                "data": {
                    "example": "platform specific",
                    "selector": { "object": null }
                }
            }
        }
    },
    "device_tracker": {
        "see": {
            "name": "See",
            "description": "Records a seen tracked device.",
            "fields": {
                "mac": {
                    "example": "FF:FF:FF:FF:FF:FF",
                    "selector": { "text": null },
                    "name": "MAC address",
                    "description": "MAC address of the device."
                },
                "dev_id": {
                    "example": "phonedave",
                    "selector": { "text": null },
                    "name": "Device ID",
                    "description": "ID of the device (find the ID in `known_devices.yaml`)."
                },
                "host_name": {
                    "example": "Dave",
                    "selector": { "text": null },
                    "name": "Hostname",
                    "description": "Hostname of the device."
                },
                "location_name": {
                    "example": "home",
                    "selector": { "text": null },
                    "name": "Location",
                    "description": "Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone."
                },
                "gps": {
                    "example": "[51.509802, -0.086692]",
                    "selector": { "object": null },
                    "name": "GPS coordinates",
                    "description": "GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539])."
                },
                "gps_accuracy": {
                    "selector": {
                        "number": {
                            "min": 0,
                            "mode": "box",
                            "unit_of_measurement": "m"
                        }
                    },
                    "name": "GPS accuracy",
                    "description": "Accuracy of the GPS coordinates."
                },
                "battery": {
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Battery level",
                    "description": "Battery level of the device."
                }
            }
        }
    },
    "climate": {
        "turn_on": {
            "name": "Turn on",
            "description": "Turns climate device on.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [256]
                    }
                ]
            }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns climate device off.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [128]
                    }
                ]
            }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles climate device, from on to off, or off to on.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [128, 256]
                    }
                ]
            }
        },
        "set_hvac_mode": {
            "name": "Set HVAC mode",
            "description": "Sets HVAC operation mode.",
            "fields": {
                "hvac_mode": {
                    "selector": {
                        "select": {
                            "options": [
                                "off",
                                "auto",
                                "cool",
                                "dry",
                                "fan_only",
                                "heat_cool",
                                "heat"
                            ],
                            "translation_key": "hvac_mode"
                        }
                    },
                    "name": "HVAC mode",
                    "description": "HVAC operation mode."
                }
            },
            "target": { "entity": [{ "domain": ["climate"] }] }
        },
        "set_preset_mode": {
            "name": "Set preset mode",
            "description": "Sets preset mode.",
            "fields": {
                "preset_mode": {
                    "required": true,
                    "example": "away",
                    "selector": { "text": null },
                    "name": "Preset mode",
                    "description": "Preset mode."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [16]
                    }
                ]
            }
        },
        "set_aux_heat": {
            "name": "Turn on/off auxiliary heater",
            "description": "Turns auxiliary heater on/off.",
            "fields": {
                "aux_heat": {
                    "required": true,
                    "selector": { "boolean": null },
                    "name": "Auxiliary heating",
                    "description": "New value of auxiliary heater."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [64]
                    }
                ]
            }
        },
        "set_temperature": {
            "name": "Set target temperature",
            "description": "Sets target temperature.",
            "fields": {
                "temperature": {
                    "filter": { "supported_features": [1] },
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 250,
                            "step": 0.1,
                            "mode": "box"
                        }
                    },
                    "name": "Temperature",
                    "description": "Target temperature."
                },
                "target_temp_high": {
                    "filter": { "supported_features": [2] },
                    "advanced": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 250,
                            "step": 0.1,
                            "mode": "box"
                        }
                    },
                    "name": "Target temperature high",
                    "description": "High target temperature."
                },
                "target_temp_low": {
                    "filter": { "supported_features": [2] },
                    "advanced": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 250,
                            "step": 0.1,
                            "mode": "box"
                        }
                    },
                    "name": "Target temperature low",
                    "description": "Low target temperature."
                },
                "hvac_mode": {
                    "selector": {
                        "select": {
                            "options": [
                                "off",
                                "auto",
                                "cool",
                                "dry",
                                "fan_only",
                                "heat_cool",
                                "heat"
                            ],
                            "translation_key": "hvac_mode"
                        }
                    },
                    "name": "HVAC mode",
                    "description": "HVAC operation mode."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [1, 2]
                    }
                ]
            }
        },
        "set_humidity": {
            "name": "Set target humidity",
            "description": "Sets target humidity.",
            "fields": {
                "humidity": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 30,
                            "max": 99,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Humidity",
                    "description": "Target humidity."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [4]
                    }
                ]
            }
        },
        "set_fan_mode": {
            "name": "Set fan mode",
            "description": "Sets fan operation mode.",
            "fields": {
                "fan_mode": {
                    "required": true,
                    "example": "low",
                    "selector": { "text": null },
                    "name": "Fan mode",
                    "description": "Fan operation mode."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [8]
                    }
                ]
            }
        },
        "set_swing_mode": {
            "name": "Set swing mode",
            "description": "Sets swing operation mode.",
            "fields": {
                "swing_mode": {
                    "required": true,
                    "example": "horizontal",
                    "selector": { "text": null },
                    "name": "Swing mode",
                    "description": "Swing operation mode."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["climate"],
                        "supported_features": [32]
                    }
                ]
            }
        }
    },
    "switch": {
        "turn_off": {
            "name": "Turn off",
            "description": "Turns a switch off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["switch"] }] }
        },
        "turn_on": {
            "name": "Turn on",
            "description": "Turns a switch on.",
            "fields": {},
            "target": { "entity": [{ "domain": ["switch"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles a switch on/off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["switch"] }] }
        }
    },
    "button": {
        "press": {
            "name": "Press",
            "description": "Press the button entity.",
            "fields": {},
            "target": { "entity": [{ "domain": ["button"] }] }
        }
    },
    "flux_led": {
        "set_custom_effect": {
            "name": "Set custom effect",
            "description": "Sets a custom light effect.",
            "fields": {
                "colors": {
                    "example": "- [255,0,0]\n- [0,255,0]\n- [0,0,255]\n",
                    "required": true,
                    "selector": { "object": null },
                    "name": "Colors",
                    "description": "List of colors for the custom effect (RGB). (Max 16 Colors)."
                },
                "speed_pct": {
                    "example": 80,
                    "default": 50,
                    "required": false,
                    "selector": {
                        "number": {
                            "min": 1,
                            "step": 1,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Speed",
                    "description": "Effect speed for the custom effect (0-100)."
                },
                "transition": {
                    "example": "jump",
                    "default": "gradual",
                    "required": false,
                    "selector": {
                        "select": {
                            "options": ["gradual", "jump", "strobe"]
                        }
                    },
                    "name": "Transition",
                    "description": "Effect transition."
                }
            },
            "target": {
                "entity": [
                    { "integration": "flux_led", "domain": ["light"] }
                ]
            }
        },
        "set_zones": {
            "name": "Set zones",
            "description": "Sets strip zones for Addressable v3 controllers (0xA3).",
            "fields": {
                "colors": {
                    "example": "- [255,0,0]\n- [0,255,0]\n- [0,0,255]\n- [255,255,255]\n",
                    "required": true,
                    "selector": { "object": null },
                    "name": "Colors",
                    "description": "List of colors for each zone (RGB). The length of each zone is the number of pixels per segment divided by the number of colors. (Max 2048 Colors)."
                },
                "speed_pct": {
                    "example": 80,
                    "default": 50,
                    "required": false,
                    "selector": {
                        "number": {
                            "min": 1,
                            "step": 1,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Speed",
                    "description": "Effect speed for the custom effect (0-100)."
                },
                "effect": {
                    "example": "running_water",
                    "default": "static",
                    "required": false,
                    "selector": {
                        "select": {
                            "options": [
                                "static",
                                "running_water",
                                "strobe",
                                "jump",
                                "breathing"
                            ]
                        }
                    },
                    "name": "Effect",
                    "description": "Effect."
                }
            },
            "target": {
                "entity": [
                    { "integration": "flux_led", "domain": ["light"] }
                ]
            }
        },
        "set_music_mode": {
            "name": "Set music mode",
            "description": "Configures music mode on Controller RGB with MIC (0x08), Addressable v2 (0xA2), and Addressable v3 (0xA3) devices that have a built-in microphone.",
            "fields": {
                "sensitivity": {
                    "example": 80,
                    "default": 100,
                    "required": false,
                    "selector": {
                        "number": {
                            "min": 1,
                            "step": 1,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Sensitivity",
                    "description": "Microphone sensitivity (0-100)."
                },
                "brightness": {
                    "example": 80,
                    "default": 100,
                    "required": false,
                    "selector": {
                        "number": {
                            "min": 1,
                            "step": 1,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Brightness",
                    "description": "Light brightness (0-100)."
                },
                "light_screen": {
                    "default": false,
                    "required": false,
                    "selector": { "boolean": null },
                    "name": "Light screen",
                    "description": "Light screen mode for 2 dimensional pixels (Addressable models only)."
                },
                "effect": {
                    "example": 1,
                    "default": 1,
                    "required": false,
                    "selector": {
                        "number": { "min": 0, "step": 1, "max": 16 }
                    },
                    "name": "Effect",
                    "description": "Effect (1-16 on Addressable models, 0-3 on RGB with MIC models)."
                },
                "foreground_color": {
                    "example": "[255, 100, 100]",
                    "required": false,
                    "selector": { "color_rgb": null },
                    "name": "Foreground color",
                    "description": "The foreground RGB color."
                },
                "background_color": {
                    "example": "[255, 100, 100]",
                    "required": false,
                    "selector": { "color_rgb": null },
                    "name": "Background color",
                    "description": "The background RGB color (Addressable models only)."
                }
            },
            "target": {
                "entity": [
                    { "integration": "flux_led", "domain": ["light"] }
                ]
            }
        }
    },
    "number": {
        "set_value": {
            "name": "Set",
            "description": "Sets the value of a number.",
            "fields": {
                "value": {
                    "example": 42,
                    "selector": { "text": null },
                    "name": "Value",
                    "description": "The target value to set."
                }
            },
            "target": { "entity": [{ "domain": ["number"] }] }
        }
    },
    "select": {
        "select_first": {
            "name": "First",
            "description": "Selects the first option.",
            "fields": {},
            "target": { "entity": [{ "domain": ["select"] }] }
        },
        "select_last": {
            "name": "Last",
            "description": "Selects the last option.",
            "fields": {},
            "target": { "entity": [{ "domain": ["select"] }] }
        },
        "select_next": {
            "name": "Next",
            "description": "Selects the next option.",
            "fields": {
                "cycle": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Cycle",
                    "description": "If the option should cycle from the last to the first."
                }
            },
            "target": { "entity": [{ "domain": ["select"] }] }
        },
        "select_option": {
            "name": "Select",
            "description": "Selects an option.",
            "fields": {
                "option": {
                    "required": true,
                    "example": "\"Item A\"",
                    "selector": { "text": null },
                    "name": "Option",
                    "description": "Option to be selected."
                }
            },
            "target": { "entity": [{ "domain": ["select"] }] }
        },
        "select_previous": {
            "name": "Previous",
            "description": "Selects the previous option.",
            "fields": {
                "cycle": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Cycle",
                    "description": "If the option should cycle from the first to the last."
                }
            },
            "target": { "entity": [{ "domain": ["select"] }] }
        }
    },
    "remote": {
        "turn_off": {
            "name": "Turn off",
            "description": "Turns the device off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["remote"] }] }
        },
        "turn_on": {
            "name": "Turn on",
            "description": "Sends the power on command.",
            "fields": {
                "activity": {
                    "example": "BedroomTV",
                    "filter": { "supported_features": [4] },
                    "selector": { "text": null },
                    "name": "Activity",
                    "description": "Activity ID or activity name to be started."
                }
            },
            "target": { "entity": [{ "domain": ["remote"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles a device on/off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["remote"] }] }
        },
        "send_command": {
            "name": "Send command",
            "description": "Sends a command or a list of commands to a device.",
            "fields": {
                "device": {
                    "example": "32756745",
                    "selector": { "text": null },
                    "name": "Device",
                    "description": "Device ID to send command to."
                },
                "command": {
                    "required": true,
                    "example": "Play",
                    "selector": { "object": null },
                    "name": "Command",
                    "description": "A single command or a list of commands to send."
                },
                "num_repeats": {
                    "default": 1,
                    "selector": {
                        "number": { "min": 0, "max": 255 }
                    },
                    "name": "Repeats",
                    "description": "The number of times you want to repeat the commands."
                },
                "delay_secs": {
                    "default": 0.4,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 60,
                            "step": 0.1,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Delay seconds",
                    "description": "The time you want to wait in between repeated commands."
                },
                "hold_secs": {
                    "default": 0,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 60,
                            "step": 0.1,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Hold seconds",
                    "description": "The time you want to have it held before the release is send."
                }
            },
            "target": { "entity": [{ "domain": ["remote"] }] }
        },
        "learn_command": {
            "name": "Learn command",
            "description": "Learns a command or a list of commands from a device.",
            "fields": {
                "device": {
                    "example": "television",
                    "selector": { "text": null },
                    "name": "Device",
                    "description": "Device ID to learn command from."
                },
                "command": {
                    "example": "Turn on",
                    "selector": { "object": null },
                    "name": "Command",
                    "description": "A single command or a list of commands to learn."
                },
                "command_type": {
                    "default": "ir",
                    "selector": {
                        "select": { "options": ["ir", "rf"] }
                    },
                    "name": "Command type",
                    "description": "The type of command to be learned."
                },
                "alternative": {
                    "selector": { "boolean": null },
                    "name": "Alternative",
                    "description": "If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won't change the state."
                },
                "timeout": {
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 60,
                            "step": 5,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Timeout",
                    "description": "Timeout for the command to be learned."
                }
            },
            "target": { "entity": [{ "domain": ["remote"] }] }
        },
        "delete_command": {
            "name": "Delete command",
            "description": "Deletes a command or a list of commands from the database.",
            "fields": {
                "device": {
                    "example": "television",
                    "selector": { "text": null },
                    "name": "Device",
                    "description": "Device from which commands will be deleted."
                },
                "command": {
                    "required": true,
                    "example": "Mute",
                    "selector": { "object": null },
                    "name": "Command",
                    "description": "The single command or the list of commands to be deleted."
                }
            },
            "target": { "entity": [{ "domain": ["remote"] }] }
        }
    },
    "smartthinq_sensors": {
        "set_sleep_time": {
            "name": "Set sleep time",
            "description": "Set sleep time.",
            "fields": {
                "sleep_time": {
                    "name": "Timeout",
                    "description": "Timeout for sleep mode in minutes",
                    "default": 60,
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 720,
                            "mode": "box",
                            "unit_of_measurement": "minutes"
                        }
                    }
                }
            },
            "target": {
                "entity": [
                    {
                        "integration": "smartthinq_sensors",
                        "domain": ["climate"]
                    }
                ]
            }
        },
        "set_fan_mode": {
            "name": "Set fan mode",
            "description": "Set fan operation for dehumidifier device.",
            "fields": {
                "fan_mode": {
                    "name": "Fan mode",
                    "description": "New value of fan mode.",
                    "required": true,
                    "example": "low",
                    "selector": { "text": null }
                }
            },
            "target": {
                "entity": [
                    {
                        "integration": "smartthinq_sensors",
                        "domain": ["humidifier"]
                    }
                ]
            }
        },
        "remote_start": {
            "name": "Remote Start",
            "description": "Send to ThinQ device the remote start command.",
            "fields": {
                "course": {
                    "name": "course",
                    "description": "Course (if not set will use current)",
                    "required": false,
                    "selector": { "text": null }
                }
            },
            "target": {
                "entity": [
                    {
                        "integration": "smartthinq_sensors",
                        "domain": ["sensor"]
                    }
                ]
            }
        },
        "wake_up": {
            "name": "WakeUp",
            "description": "Send to ThinQ device the wakeup command.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "integration": "smartthinq_sensors",
                        "domain": ["sensor"]
                    }
                ]
            }
        },
        "set_time": {
            "name": "Set time",
            "description": "Set time device.",
            "fields": {
                "time_wanted": {
                    "name": "time",
                    "description": "Time (if not set will use Home-Assistant time)",
                    "required": false,
                    "selector": { "time": null }
                }
            },
            "target": {
                "entity": [
                    {
                        "integration": "smartthinq_sensors",
                        "domain": ["sensor"]
                    }
                ]
            }
        }
    },
    "fan": {
        "turn_on": {
            "name": "Turn on",
            "description": "Turns fan on.",
            "fields": {
                "percentage": {
                    "filter": { "supported_features": [1] },
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Percentage",
                    "description": "Speed of the fan."
                },
                "preset_mode": {
                    "example": "auto",
                    "filter": { "supported_features": [8] },
                    "selector": { "text": null },
                    "name": "Preset mode",
                    "description": "Preset mode."
                }
            },
            "target": { "entity": [{ "domain": ["fan"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns fan off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["fan"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles the fan on/off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["fan"] }] }
        },
        "increase_speed": {
            "name": "Increase speed",
            "description": "Increases the speed of the fan.",
            "fields": {
                "percentage_step": {
                    "advanced": true,
                    "required": false,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Increment",
                    "description": "Increases the speed by a percentage step."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["fan"], "supported_features": [1] }
                ]
            }
        },
        "decrease_speed": {
            "name": "Decrease speed",
            "description": "Decreases the speed of the fan.",
            "fields": {
                "percentage_step": {
                    "advanced": true,
                    "required": false,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Decrement",
                    "description": "Decreases the speed by a percentage step."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["fan"], "supported_features": [1] }
                ]
            }
        },
        "oscillate": {
            "name": "Oscillate",
            "description": "Controls oscillatation of the fan.",
            "fields": {
                "oscillating": {
                    "required": true,
                    "selector": { "boolean": null },
                    "name": "Oscillating",
                    "description": "Turn on/off oscillation."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["fan"], "supported_features": [2] }
                ]
            }
        },
        "set_direction": {
            "name": "Set direction",
            "description": "Sets the fan rotation direction.",
            "fields": {
                "direction": {
                    "required": true,
                    "selector": {
                        "select": {
                            "options": ["forward", "reverse"],
                            "translation_key": "direction"
                        }
                    },
                    "name": "Direction",
                    "description": "Direction to rotate."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["fan"], "supported_features": [4] }
                ]
            }
        },
        "set_percentage": {
            "name": "Set speed",
            "description": "Sets the fan speed.",
            "fields": {
                "percentage": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Percentage",
                    "description": "Speed of the fan."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["fan"], "supported_features": [1] }
                ]
            }
        },
        "set_preset_mode": {
            "name": "Set preset mode",
            "description": "Sets preset mode.",
            "fields": {
                "preset_mode": {
                    "required": true,
                    "example": "auto",
                    "selector": { "text": null },
                    "name": "Preset mode",
                    "description": "Preset mode."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["fan"], "supported_features": [8] }
                ]
            }
        }
    },
    "humidifier": {
        "turn_on": {
            "name": "Turn on",
            "description": "Turns the humidifier on.",
            "fields": {},
            "target": { "entity": [{ "domain": ["humidifier"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns the humidifier off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["humidifier"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles the humidifier on/off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["humidifier"] }] }
        },
        "set_mode": {
            "name": "Set mode",
            "description": "Sets the humidifier operation mode.",
            "fields": {
                "mode": {
                    "required": true,
                    "example": "away",
                    "selector": { "text": null },
                    "name": "Mode",
                    "description": "Operation mode. For example, _normal_, _eco_, or _away_. For a list of possible values, refer to the integration documentation."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["humidifier"],
                        "supported_features": [1]
                    }
                ]
            }
        },
        "set_humidity": {
            "name": "Set humidity",
            "description": "Sets the target humidity.",
            "fields": {
                "humidity": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "unit_of_measurement": "%"
                        }
                    },
                    "name": "Humidity",
                    "description": "Target humidity."
                }
            },
            "target": { "entity": [{ "domain": ["humidifier"] }] }
        }
    },
    "water_heater": {
        "turn_on": {
            "name": "Turn on",
            "description": "Turns water heater on.",
            "fields": {},
            "target": { "entity": [{ "domain": ["water_heater"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns water heater off.",
            "fields": {},
            "target": { "entity": [{ "domain": ["water_heater"] }] }
        },
        "set_away_mode": {
            "name": "Set away mode",
            "description": "Turns away mode on/off.",
            "fields": {
                "away_mode": {
                    "required": true,
                    "selector": { "boolean": null },
                    "name": "Away mode",
                    "description": "New value of away mode."
                }
            },
            "target": { "entity": [{ "domain": ["water_heater"] }] }
        },
        "set_temperature": {
            "name": "Set temperature",
            "description": "Sets the target temperature.",
            "fields": {
                "temperature": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 100,
                            "step": 0.5,
                            "unit_of_measurement": "°"
                        }
                    },
                    "name": "Temperature",
                    "description": "New target temperature for the water heater."
                },
                "operation_mode": {
                    "example": "eco",
                    "selector": { "text": null },
                    "name": "Operation mode",
                    "description": "New value of the operation mode. For a list of possible modes, refer to the integration documentation."
                }
            },
            "target": { "entity": [{ "domain": ["water_heater"] }] }
        },
        "set_operation_mode": {
            "name": "Set operation mode",
            "description": "Sets the operation mode.",
            "fields": {
                "operation_mode": {
                    "required": true,
                    "example": "eco",
                    "selector": { "text": null },
                    "name": "Operation mode",
                    "description": "New value of the operation mode. For a list of possible modes, refer to the integration documentation."
                }
            },
            "target": { "entity": [{ "domain": ["water_heater"] }] }
        }
    },
    "weather": {
        "get_forecast": {
            "name": "Get forecast",
            "description": "Get weather forecast.",
            "fields": {
                "type": {
                    "required": true,
                    "selector": {
                        "select": {
                            "options": [
                                "daily",
                                "hourly",
                                "twice_daily"
                            ],
                            "translation_key": "forecast_type"
                        }
                    },
                    "name": "Forecast type",
                    "description": "Forecast type: daily, hourly or twice daily."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["weather"],
                        "supported_features": [1, 2, 4]
                    }
                ]
            },
            "response": { "optional": false }
        },
        "get_forecasts": {
            "name": "Get forecasts",
            "description": "Get weather forecasts.",
            "fields": {
                "type": {
                    "required": true,
                    "selector": {
                        "select": {
                            "options": [
                                "daily",
                                "hourly",
                                "twice_daily"
                            ],
                            "translation_key": "forecast_type"
                        }
                    },
                    "name": "Forecast type",
                    "description": "Forecast type: daily, hourly or twice daily."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["weather"],
                        "supported_features": [1, 2, 4]
                    }
                ]
            },
            "response": { "optional": false }
        }
    },
    "alarm_control_panel": {
        "alarm_disarm": {
            "name": "Disarm",
            "description": "Disarms the alarm.",
            "fields": {
                "code": {
                    "example": "1234",
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to disarm the alarm."
                }
            },
            "target": {
                "entity": [{ "domain": ["alarm_control_panel"] }]
            }
        },
        "alarm_arm_home": {
            "name": "Arm home",
            "description": "Sets the alarm to: _armed, but someone is home_.",
            "fields": {
                "code": {
                    "example": "1234",
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to arm the alarm."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["alarm_control_panel"],
                        "supported_features": [1]
                    }
                ]
            }
        },
        "alarm_arm_away": {
            "name": "Arm away",
            "description": "Sets the alarm to: _armed, no one home_.",
            "fields": {
                "code": {
                    "example": "1234",
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to arm the alarm."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["alarm_control_panel"],
                        "supported_features": [2]
                    }
                ]
            }
        },
        "alarm_arm_night": {
            "name": "Arm night",
            "description": "Sets the alarm to: _armed for the night_.",
            "fields": {
                "code": {
                    "example": "1234",
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to arm the alarm."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["alarm_control_panel"],
                        "supported_features": [4]
                    }
                ]
            }
        },
        "alarm_arm_vacation": {
            "name": "Arm vacation",
            "description": "Sets the alarm to: _armed for vacation_.",
            "fields": {
                "code": {
                    "example": "1234",
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to arm the alarm."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["alarm_control_panel"],
                        "supported_features": [32]
                    }
                ]
            }
        },
        "alarm_arm_custom_bypass": {
            "name": "Arm with custom bypass",
            "description": "Arms the alarm while allowing to bypass a custom area.",
            "fields": {
                "code": {
                    "example": "1234",
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to arm the alarm."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["alarm_control_panel"],
                        "supported_features": [16]
                    }
                ]
            }
        },
        "alarm_trigger": {
            "name": "Trigger",
            "description": "Enables an external alarm trigger.",
            "fields": {
                "code": {
                    "example": "1234",
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to arm the alarm."
                }
            },
            "target": {
                "entity": [
                    {
                        "domain": ["alarm_control_panel"],
                        "supported_features": [8]
                    }
                ]
            }
        }
    },
    "camera": {
        "enable_motion_detection": {
            "name": "Enable motion detection",
            "description": "Enables the motion detection.",
            "fields": {},
            "target": { "entity": [{ "domain": ["camera"] }] }
        },
        "disable_motion_detection": {
            "name": "Disable motion detection",
            "description": "Disables the motion detection.",
            "fields": {},
            "target": { "entity": [{ "domain": ["camera"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns off the camera.",
            "fields": {},
            "target": { "entity": [{ "domain": ["camera"] }] }
        },
        "turn_on": {
            "name": "Turn on",
            "description": "Turns on the camera.",
            "fields": {},
            "target": { "entity": [{ "domain": ["camera"] }] }
        },
        "snapshot": {
            "name": "Take snapshot",
            "description": "Takes a snapshot from a camera.",
            "fields": {
                "filename": {
                    "required": true,
                    "example": "/tmp/snapshot_{{ entity_id.name }}.jpg",
                    "selector": { "text": null },
                    "name": "Filename",
                    "description": "Template of a filename. Variable available is `entity_id`."
                }
            },
            "target": { "entity": [{ "domain": ["camera"] }] }
        },
        "play_stream": {
            "name": "Play stream",
            "description": "Plays the camera stream on a supported media player.",
            "fields": {
                "media_player": {
                    "required": true,
                    "selector": {
                        "entity": { "domain": "media_player" }
                    },
                    "name": "Media player",
                    "description": "Media players to stream to."
                },
                "format": {
                    "default": "hls",
                    "selector": { "select": { "options": ["hls"] } },
                    "name": "Format",
                    "description": "Stream format supported by the media player."
                }
            },
            "target": { "entity": [{ "domain": ["camera"] }] }
        },
        "record": {
            "name": "Record",
            "description": "Creates a recording of a live camera feed.",
            "fields": {
                "filename": {
                    "required": true,
                    "example": "/tmp/snapshot_{{ entity_id.name }}.mp4",
                    "selector": { "text": null },
                    "name": "Filename",
                    "description": "Template of a filename. Variable available is `entity_id`. Must be mp4."
                },
                "duration": {
                    "default": 30,
                    "selector": {
                        "number": {
                            "min": 1,
                            "max": 3600,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Duration",
                    "description": "Planned duration of the recording. The actual duration may vary."
                },
                "lookback": {
                    "default": 0,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 300,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Lookback",
                    "description": "Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary."
                }
            },
            "target": { "entity": [{ "domain": ["camera"] }] }
        }
    },
    "siren": {
        "turn_on": {
            "name": "Turn on",
            "description": "Turns the siren on.",
            "fields": {
                "tone": {
                    "example": "fire",
                    "filter": { "supported_features": [4] },
                    "required": false,
                    "selector": { "text": null },
                    "name": "Tone",
                    "description": "The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration."
                },
                "volume_level": {
                    "example": 0.5,
                    "filter": { "supported_features": [8] },
                    "required": false,
                    "selector": {
                        "number": { "min": 0, "max": 1, "step": 0.05 }
                    },
                    "name": "Volume",
                    "description": "The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration."
                },
                "duration": {
                    "example": 15,
                    "filter": { "supported_features": [16] },
                    "required": false,
                    "selector": { "text": null },
                    "name": "Duration",
                    "description": "Number of seconds the sound is played. Must be supported by the integration."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["siren"], "supported_features": [1] }
                ]
            }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Turns the siren off.",
            "fields": {},
            "target": {
                "entity": [
                    { "domain": ["siren"], "supported_features": [2] }
                ]
            }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles the siren on/off.",
            "fields": {},
            "target": {
                "entity": [
                    { "domain": ["siren"], "supported_features": [3] }
                ]
            }
        }
    },
    "vacuum": {
        "start": {
            "name": "Start",
            "description": "Starts or resumes the cleaning task.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["vacuum"],
                        "supported_features": [8192]
                    }
                ]
            }
        },
        "pause": {
            "name": "Pause",
            "description": "Pauses the cleaning task.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["vacuum"],
                        "supported_features": [4]
                    }
                ]
            }
        },
        "return_to_base": {
            "name": "Return to dock",
            "description": "Tells the vacuum cleaner to return to its dock.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["vacuum"],
                        "supported_features": [16]
                    }
                ]
            }
        },
        "clean_spot": {
            "name": "Clean spot",
            "description": "Tells the vacuum cleaner to do a spot clean-up.",
            "fields": {},
            "target": { "entity": [{ "domain": ["vacuum"] }] }
        },
        "locate": {
            "name": "Locate",
            "description": "Locates the vacuum cleaner robot.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["vacuum"],
                        "supported_features": [512]
                    }
                ]
            }
        },
        "stop": {
            "name": "Stop",
            "description": "Stops the current cleaning task.",
            "fields": {},
            "target": {
                "entity": [
                    {
                        "domain": ["vacuum"],
                        "supported_features": [8]
                    }
                ]
            }
        },
        "set_fan_speed": {
            "name": "Set fan speed",
            "description": "Sets the fan speed of the vacuum cleaner.",
            "fields": {
                "fan_speed": {
                    "required": true,
                    "example": "low",
                    "selector": { "text": null },
                    "name": "Fan speed",
                    "description": "Fan speed. The value depends on the integration. Some integrations have speed steps, like 'medium'. Some use a percentage, between 0 and 100."
                }
            },
            "target": { "entity": [{ "domain": ["vacuum"] }] }
        },
        "send_command": {
            "name": "Send command",
            "description": "Sends a command to the vacuum cleaner.",
            "fields": {
                "command": {
                    "required": true,
                    "example": "set_dnd_timer",
                    "selector": { "text": null },
                    "name": "Command",
                    "description": "Command to execute. The commands are integration-specific."
                },
                "params": {
                    "example": "{ \"key\": \"value\" }",
                    "selector": { "object": null },
                    "name": "Parameters",
                    "description": "Parameters for the command. The parameters are integration-specific."
                }
            },
            "target": { "entity": [{ "domain": ["vacuum"] }] }
        }
    },
    "automation": {
        "trigger": {
            "name": "Trigger",
            "description": "Triggers the actions of an automation.",
            "fields": {
                "skip_condition": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Skip conditions",
                    "description": "Defines whether or not the conditions will be skipped."
                }
            },
            "target": { "entity": [{ "domain": ["automation"] }] }
        },
        "toggle": {
            "name": "Toggle",
            "description": "Toggles (enable / disable) an automation.",
            "fields": {},
            "target": { "entity": [{ "domain": ["automation"] }] }
        },
        "turn_on": {
            "name": "Turn on",
            "description": "Enables an automation.",
            "fields": {},
            "target": { "entity": [{ "domain": ["automation"] }] }
        },
        "turn_off": {
            "name": "Turn off",
            "description": "Disables an automation.",
            "fields": {
                "stop_actions": {
                    "default": true,
                    "selector": { "boolean": null },
                    "name": "Stop actions",
                    "description": "Stops currently running actions."
                }
            },
            "target": { "entity": [{ "domain": ["automation"] }] }
        },
        "reload": {
            "name": "Reload",
            "description": "Reloads the automation configuration.",
            "fields": {}
        }
    },
    "zha": {
        "set_lock_user_code": {
            "name": "Set lock user code",
            "description": "Sets a user code on a lock.",
            "fields": {
                "code_slot": {
                    "required": true,
                    "example": 1,
                    "selector": { "text": null },
                    "name": "Code slot",
                    "description": "Code slot to set the code in."
                },
                "user_code": {
                    "required": true,
                    "example": 1234,
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code to set."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["lock"], "integration": "zha" }
                ]
            }
        },
        "enable_lock_user_code": {
            "name": "Enable lock user",
            "description": "Enables a user code on a lock.",
            "fields": {
                "code_slot": {
                    "required": true,
                    "example": 1,
                    "selector": { "text": null },
                    "name": "Code slot",
                    "description": "Code slot to enable."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["lock"], "integration": "zha" }
                ]
            }
        },
        "disable_lock_user_code": {
            "name": "Disable lock user",
            "description": "Disables a user code on a lock.",
            "fields": {
                "code_slot": {
                    "required": true,
                    "example": 1,
                    "selector": { "text": null },
                    "name": "Code slot",
                    "description": "Code slot to disable."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["lock"], "integration": "zha" }
                ]
            }
        },
        "clear_lock_user_code": {
            "name": "Clear lock user",
            "description": "Clears a user code from a lock.",
            "fields": {
                "code_slot": {
                    "required": true,
                    "example": 1,
                    "selector": { "text": null },
                    "name": "Code slot",
                    "description": "Code slot to clear code from."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["lock"], "integration": "zha" }
                ]
            }
        },
        "permit": {
            "name": "Permit",
            "description": "Allows nodes to join the Zigbee network.",
            "fields": {
                "duration": {
                    "default": 60,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 254,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Duration",
                    "description": "Time to permit joins."
                },
                "ieee": {
                    "example": "00:0d:6f:00:05:7d:2d:34",
                    "selector": { "text": null },
                    "name": "IEEE",
                    "description": "IEEE address of the node permitting new joins."
                },
                "source_ieee": {
                    "example": "00:0a:bf:00:01:10:23:35",
                    "selector": { "text": null },
                    "name": "Source IEEE",
                    "description": "IEEE address of the joining device (must be used with the install code)."
                },
                "install_code": {
                    "example": "1234-5678-1234-5678-AABB-CCDD-AABB-CCDD-EEFF",
                    "selector": { "text": null },
                    "name": "Install code",
                    "description": "Install code of the joining device (must be used with the source_ieee)."
                },
                "qr_code": {
                    "example": "Z:000D6FFFFED4163B$I:52797BF4A5084DAA8E1712B61741CA024051",
                    "selector": { "text": null },
                    "name": "QR code",
                    "description": "Value of the QR install code (different between vendors)."
                }
            }
        },
        "remove": {
            "name": "Remove",
            "description": "Removes a node from the Zigbee network.",
            "fields": {
                "ieee": {
                    "required": true,
                    "example": "00:0d:6f:00:05:7d:2d:34",
                    "selector": { "text": null },
                    "name": "IEEE",
                    "description": "IEEE address of the node to remove."
                }
            }
        },
        "set_zigbee_cluster_attribute": {
            "name": "Set zigbee cluster attribute",
            "description": "Sets an attribute value for the specified cluster on the specified entity.",
            "fields": {
                "ieee": {
                    "required": true,
                    "example": "00:0d:6f:00:05:7d:2d:34",
                    "selector": { "text": null },
                    "name": "IEEE",
                    "description": "IEEE address for the device."
                },
                "endpoint_id": {
                    "required": true,
                    "selector": {
                        "number": {
                            "min": 1,
                            "max": 65535,
                            "mode": "box"
                        }
                    },
                    "name": "Endpoint ID",
                    "description": "Endpoint ID for the cluster."
                },
                "cluster_id": {
                    "required": true,
                    "selector": {
                        "number": { "min": 1, "max": 65535 }
                    },
                    "name": "Cluster ID",
                    "description": "ZCL cluster to retrieve attributes for."
                },
                "cluster_type": {
                    "default": "in",
                    "selector": {
                        "select": { "options": ["in", "out"] }
                    },
                    "name": "Cluster Type",
                    "description": "Type of the cluster."
                },
                "attribute": {
                    "required": true,
                    "example": 0,
                    "selector": {
                        "number": { "min": 1, "max": 65535 }
                    },
                    "name": "Attribute",
                    "description": "ID of the attribute to set."
                },
                "value": {
                    "required": true,
                    "example": 1,
                    "selector": { "text": null },
                    "name": "Value",
                    "description": "Value to write to the attribute."
                },
                "manufacturer": {
                    "example": 252,
                    "selector": { "text": null },
                    "name": "Manufacturer",
                    "description": "Manufacturer code. Use a value of \"-1\" to force no code to be set."
                }
            }
        },
        "issue_zigbee_cluster_command": {
            "name": "Issue zigbee cluster command",
            "description": "Issues a command on the specified cluster on the specified entity.",
            "fields": {
                "ieee": {
                    "required": true,
                    "example": "00:0d:6f:00:05:7d:2d:34",
                    "selector": { "text": null },
                    "name": "IEEE",
                    "description": "IEEE address for the device."
                },
                "endpoint_id": {
                    "required": true,
                    "selector": {
                        "number": { "min": 1, "max": 65535 }
                    },
                    "name": "Endpoint ID",
                    "description": "Endpoint ID for the cluster."
                },
                "cluster_id": {
                    "required": true,
                    "selector": {
                        "number": { "min": 1, "max": 65535 }
                    },
                    "name": "Cluster ID",
                    "description": "ZCL cluster to retrieve attributes for."
                },
                "cluster_type": {
                    "default": "in",
                    "selector": {
                        "select": { "options": ["in", "out"] }
                    },
                    "name": "Cluster Type",
                    "description": "Type of the cluster."
                },
                "command": {
                    "required": true,
                    "selector": {
                        "number": { "min": 1, "max": 65535 }
                    },
                    "name": "Command",
                    "description": "ID of the command to execute."
                },
                "command_type": {
                    "required": true,
                    "selector": {
                        "select": { "options": ["client", "server"] }
                    },
                    "name": "Command Type",
                    "description": "Type of the command to execute."
                },
                "args": {
                    "example": "[arg1, arg2, argN]",
                    "selector": { "object": null },
                    "name": "Args",
                    "description": "Arguments to pass to the command."
                },
                "params": {
                    "selector": { "object": null },
                    "name": "Params",
                    "description": "Parameters to pass to the command."
                },
                "manufacturer": {
                    "example": 252,
                    "selector": { "text": null },
                    "name": "Manufacturer",
                    "description": "Manufacturer code. Use a value of \"-1\" to force no code to be set."
                }
            }
        },
        "issue_zigbee_group_command": {
            "name": "Issue zigbee group command",
            "description": "Issue command on the specified cluster on the specified group.",
            "fields": {
                "group": {
                    "required": true,
                    "example": 546,
                    "selector": { "text": null },
                    "name": "Group",
                    "description": "Hexadecimal address of the group."
                },
                "cluster_id": {
                    "required": true,
                    "selector": {
                        "number": { "min": 1, "max": 65535 }
                    },
                    "name": "Cluster ID",
                    "description": "ZCL cluster to send command to."
                },
                "cluster_type": {
                    "default": "in",
                    "selector": {
                        "select": { "options": ["in", "out"] }
                    },
                    "name": "Cluster type",
                    "description": "Type of the cluster."
                },
                "command": {
                    "required": true,
                    "selector": {
                        "number": { "min": 1, "max": 65535 }
                    },
                    "name": "Command",
                    "description": "ID of the command to execute."
                },
                "args": {
                    "example": "[arg1, arg2, argN]",
                    "selector": { "object": null },
                    "name": "Args",
                    "description": "Arguments to pass to the command."
                },
                "manufacturer": {
                    "example": 252,
                    "selector": { "text": null },
                    "name": "Manufacturer",
                    "description": "Manufacturer code. Use a value of \"-1\" to force no code to be set."
                }
            }
        },
        "warning_device_squawk": {
            "name": "Warning device squawk",
            "description": "This service uses the WD capabilities to emit a quick audible/visible pulse called a \"squawk\". The squawk command has no effect if the WD is currently active (warning in progress).",
            "fields": {
                "ieee": {
                    "required": true,
                    "example": "00:0d:6f:00:05:7d:2d:34",
                    "selector": { "text": null },
                    "name": "IEEE",
                    "description": "IEEE address for the device."
                },
                "mode": {
                    "default": 0,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 1,
                            "mode": "box"
                        }
                    },
                    "name": "Mode",
                    "description": "The Squawk Mode field is used as a 4-bit enumeration, and can have one of the values shown in Table 8-24 of the ZCL spec - Squawk Mode Field. The exact operation of each mode (how the WD “squawks”) is implementation specific."
                },
                "strobe": {
                    "default": 1,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 1,
                            "mode": "box"
                        }
                    },
                    "name": "Strobe",
                    "description": "The strobe field is used as a Boolean, and determines if the visual indication is also required in addition to the audible squawk, as shown in Table 8-25 of the ZCL spec - Strobe Bit."
                },
                "level": {
                    "default": 2,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 3,
                            "mode": "box"
                        }
                    },
                    "name": "Level",
                    "description": "The squawk level field is used as a 2-bit enumeration, and determines the intensity of audible squawk sound as shown in Table 8-26 of the ZCL spec - Squawk Level Field Values."
                }
            }
        },
        "warning_device_warn": {
            "name": "Warning device starts alert",
            "description": "This service starts the operation of the warning device. The warning device alerts the surrounding area by audible (siren) and visual (strobe) signals.",
            "fields": {
                "ieee": {
                    "required": true,
                    "example": "00:0d:6f:00:05:7d:2d:34",
                    "selector": { "text": null },
                    "name": "IEEE",
                    "description": "IEEE address for the device."
                },
                "mode": {
                    "default": 3,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 6,
                            "mode": "box"
                        }
                    },
                    "name": "Mode",
                    "description": "The Warning Mode field is used as a 4-bit enumeration, can have one of the values 0-6 defined below in table 8-20 of the ZCL spec. The exact behavior of the warning device in each mode is according to the relevant security standards."
                },
                "strobe": {
                    "default": 1,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 1,
                            "mode": "box"
                        }
                    },
                    "name": "Strobe",
                    "description": "The Strobe field is used as a 2-bit enumeration, and determines if the visual indication is required in addition to the audible siren, as indicated in Table 8-21 of the ZCL spec. \"0\" means no strobe, \"1\" means strobe. If the strobe field is “1” and the Warning Mode is “0” (“Stop”), then only the strobe is activated."
                },
                "level": {
                    "default": 2,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 3,
                            "mode": "box"
                        }
                    },
                    "name": "Level",
                    "description": "The Siren Level field is used as a 2-bit enumeration, and indicates the intensity of audible squawk sound as shown in Table 8-22 of the ZCL spec."
                },
                "duration": {
                    "default": 5,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 65535,
                            "unit_of_measurement": "seconds"
                        }
                    },
                    "name": "Duration",
                    "description": "Requested duration of warning, in seconds (16 bit). If both Strobe and Warning Mode are \"0\" this field is ignored."
                },
                "duty_cycle": {
                    "default": 0,
                    "selector": {
                        "number": { "min": 0, "max": 100, "step": 10 }
                    },
                    "name": "Duty cycle",
                    "description": "Indicates the length of the flash cycle. This allows you to vary the flash duration for different alarm types (e.g., fire, police, burglar). The valid range is 0-100 in increments of 10. All other values must be rounded to the nearest valid value. Strobe calculates a duty cycle over a duration of one second. The ON state must precede the OFF state. For example, if the Strobe Duty Cycle field specifies “40,”, then the strobe flashes ON for 4/10ths of a second and then turns OFF for 6/10ths of a second."
                },
                "intensity": {
                    "default": 2,
                    "selector": {
                        "number": {
                            "min": 0,
                            "max": 3,
                            "mode": "box"
                        }
                    },
                    "name": "Intensity",
                    "description": "Indicates the intensity of the strobe as shown in Table 8-23 of the ZCL spec. This attribute is designed to vary the output of the strobe (i.e., brightness) and not its frequency, which is detailed in section 8.4.2.3.1.6 of the ZCL spec."
                }
            }
        }
    },
    "lock": {
        "unlock": {
            "name": "Unlock",
            "description": "Unlocks a lock.",
            "fields": {
                "code": {
                    "example": 1234,
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code used to unlock the lock."
                }
            },
            "target": { "entity": [{ "domain": ["lock"] }] }
        },
        "lock": {
            "name": "Lock",
            "description": "Locks a lock.",
            "fields": {
                "code": {
                    "example": 1234,
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code used to lock the lock."
                }
            },
            "target": { "entity": [{ "domain": ["lock"] }] }
        },
        "open": {
            "name": "Open",
            "description": "Opens a lock.",
            "fields": {
                "code": {
                    "example": 1234,
                    "selector": { "text": null },
                    "name": "Code",
                    "description": "Code used to open the lock."
                }
            },
            "target": {
                "entity": [
                    { "domain": ["lock"], "supported_features": [1] }
                ]
            }
        }
    },
    "alexa_media": {
        "update_last_called": {
            "name": "Update Last Called Sensor",
            "description": "Forces update of last_called echo device for each Alexa account.",
            "fields": {
                "email": {
                    "description": "List of Alexa accounts to update. If empty, will update all known accounts.",
                    "example": "my_email@alexa.com",
                    "name": "Email address"
                }
            }
        },
        "clear_history": {
            "name": "Clear Amazon Voice History",
            "description": "Clear last entries from Alexa Voice history for each Alexa account.",
            "fields": {
                "email": {
                    "description": "Accounts to clear. Empty will clear all.",
                    "example": "my_email@alexa.com",
                    "name": "Email address"
                },
                "entries": {
                    "description": "Number of entries to clear from 1 to 50. If empty, clear 50.",
                    "example": 50,
                    "name": "Number of Entries"
                }
            }
        },
        "force_logout": {
            "name": "Force Logout",
            "description": "Force account to logout. Used mainly for debugging.",
            "fields": {
                "email": {
                    "description": "Accounts to clear. Empty will clear all.",
                    "example": "my_email@alexa.com",
                    "name": "Email address"
                }
            }
        }
    }
}
